FORMAT: 1A
HOST: private-01ace7-scout7.apiary-mock.com

# Scout

**API для приложения Scout**

- При  создании, изменении записей  ключевое поле (в JSON-е тела запроса) стандартно игнорируется. 
  При создании его значение будет присвоено автоматически.  
- Если необходимо явно указать значение ключевого поля, это можно сделать с дополнительным параметром запроса unprotect_keys=true   
- При изменении записей в JSON-е тела запроса можно указывать только те поля, которые должны быть изменены.
- При создании или изменени записей все атрибуты в JSON-е, которые не являются атрибутами модели, игнорируются. 
- Операция `DELETE` состоит в установке значения поля `active` в false.

## Data Structures

### LoginStructure
+ username: demo (string, required)
+ password: demo (string, required)
+ rememberMe: false (boolean) 

### ResponseResultStructure
+ status: Ok (string, required)
+ message: Successful (string)

### GroupsGoodsTreeStructure
+ id_group: 4 (number, required)
+ name_group: Пополнение счета (string, required)
+ id_owner_group: 0 (number, required)
+ active: true (boolean, required)
+ id_image: 123 (number, required)
+ children: [] (array[GroupsGoodsTreeStructure], required)

### GroupsGoodsListStructure
+ id_group 4 (number, required)
+ name_group Пополнение счета (string, required)
+ id_owner_group 0 (number, required)
+ id_image 123 (number, required)
+ active true (boolean, required)

### GroupGoodsStructure
+ id_group: 4 (number, required)
+ id_owner_group: 0 (number, required)
+ name_group: Алкогольные напитки (string, required)
+ active: true (boolean, required)

### GoodsStructure
+ id_goods: 7 (number, required)
+ id_group: 1 (number, required)
+ id_tax: 1 (number, required)
+ name_goods: Чашка обычная (string, required)
+ sort_order: 7 (string)
+ id_printer: 1 (number)
+ type_goods: 0 (number)
+ active: true (boolean)
+ id_goods: 7 (number, required)
+ control_rest: false (boolean, required)
+ permission_type: 0 (number,required)
+ extern_service_id: 1 (number, required, nullable)
+ print_name_goods: Чашка обычная (string, required)
+ free_price: false (boolean, required)
+ only_bar_code: false (boolean, required)
+ control_showcase: false (boolean, required)
+ min_order: 0.000 (number, required)
+ id_client: 1 (number, required, nullable)
+ use_series: false (boolean, required)
+ id_text: 1 (number, required, nullable)
+ id_modificator_group: 1 (number, required, nullable)

### TypesGoodsStructure
+ type_goods: 1 (number, required)
+ name: Обычный товар (string, required)

### BarCodesStructure
+ bar_code: 4052557303215 (string,required)
+ id_unit: 1 (number,required)
+ id_goods: 910 (number,required)
+ id_series: `-` (string,required)
+ ext_bar_code: `-` (string,required)
+ active: true (boolean, required)

### ClientsStructure
+ id_client: 8 (number, required)
+ name_client: Иванов (string, required)
+ is_supplier: false (boolean, required)
+ is_buyer: true (boolean, required)
+ can_return: true (boolean, required)
+ id_price_level: 2 (number, required)
+ active: true (boolean, required)

### TaxesStructure
+ id_tax: 1 (number, required)
+ rate_tax: 0.00 (number, required)
+ name_tax: Без НДС (string, required)
+ id_group_tax: 1 (number, required)
+ active: true (boolean, required)

### GroupsTaxesStructure
+ id_group_tax: 1 (number, required)
+ name_group_tax: A (string, required)

### PricesStructure
+ id_goods: 1 (number, required)
+ id_unit: 1 (number, required)
+ id_series: `-` (string, required)
+ id_price_level: 1 (number, required)
+ price: 100.00 (number, required)
+ min_price: 0 (number, required) 
+ max_price: 0 (number, required)
+ active: true (boolean, required)

### PriceLevelsStructure
+ id_price_level: 1 (number, required)
+ name_price_level: Закупочная (string, required)
+ active: true (boolean, required)

### UnitsStructure
+ id_goods: 1 (number, required)
+ id_unit: 1 (number, required)
+ name_unit: шт (string, required)
+ is_default: false (boolean, required)
+ rate: 1.000 (number, required)
+ type_unit: 3 (number, required)
+ max_count: 0.000 (number, required)
+ active: true (boolean, required)

### TypesUnitsStructure
+ type_unit: 2 (number, required)
+ name: Кратное 25% (string, required)

### SeriesStructure
+ id_goods: 5 (number, required)
+ id_series: 1 (string, required)
+ name_series: Синие (string, required)
+ active: true  (boolean, required)

### ContainStructure
+ id_contain_goods: 1 (number, required)
+ id_unit: 1 (number, required)
+ id_series: `-` (string, required)
+ quantity: 10 (number, required)
+ active: true (boolean, required)

### DiscountCardsStructure
+ id_discount_card:  1 (number, required)
+ id_client:  1 (number, required)
+ bar_code: 4052557303215 (string,required)
+ phone_number: 5555555555 (string, required)
+ id_price_level: 1 (number)
+ id_dcard_type:  1 (number)
+ active: true (boolean, required)

### DiscountCardTypesStructure
+ id_dcard_type:  1 (number, required)
+ name: Card type one (string)
+ active: true (boolean, required)

### GoodsListsStructure
+ id_goods_list:  1 (number, required)
+ name: Goods list name (string, required)
+ active: true (boolean, required)

### GroupOutletsStructure
+ id_group_outlet: 2 (number, required)
+ name_group: Outlets group (string, required)
+ id_owner_group: 1 (number)
+ active: true (boolean, required)

### OutletsStructure
+ id_outlet: 2 (number, required)
+ name_outlet: This is outlet (string, required)
+ id_price_level: 1 (number, required)
+ id_employee: 1 (number, required)
+ id_teller_setting: 1 (number, required)
+ id_group_outlet: 1 (number, required)
+ active: true (boolean, required)

### WorkplacesStructure
+ id_workplace: 2 (number, required)
+ id_outlet: 1 (number, required)
+ name_workplace: This is workplace (string, required)
+ control_rest: false (boolean, required)
+ control_bar_code: false (boolean, required)
+ control_showcase: false (boolean, required)
+ allow_free_price: false (boolean, required)
+ control_goods: false (boolean, required)
+ ads_enabled: false (boolean, required)
+ active: true (boolean, required)

### OutletsListsStructure
+ id_outlet_list:  1 (number, required)
+ name: This is outlets list (string, required)
+ active: true (boolean, required)

### WorkplacesListsStructure
+ id_workplace_list:  1 (number, required)
+ name: This is workplaces list (string, required)
+ active: true (boolean, required)

### LoyaltyProgramsStructure
+ id_program:  1 (number, required)
+ program_text: Loyalty program JSON must be here. (string, required)
+ state:  1 (number, required)
+ active: true (boolean, required)

### AdsMessagesStructure
+ id_ads: 1  (number, required)
+ id_workplace: 1 (number, required)
+ ads_text: This is ads text example (string)
+ is_unique: false (boolean)
+ use_count: 0 (number)
+ active: true (boolean, required)

### CashFlowStructure
+ id_article: 15 (number, required)
+ name_cash_flow: Инкассация в основную кассу (string, required)
+ type_cash_flow: 1 (number, required)
+ active: true (boolean, required)

### CurrencyStructure
+ id_currency: 1 (number, required)
+ symbol_currency: `UAH` (string, required)
+ name_currency: `Гривны` (string, required)
+ is_default: true (boolean, required)
+ active: true (boolean, required)

### CurrencyExchangeStructure
+ id_exchange: 1 (number, required)
+ id_currency: 1 (number, required)
+ multiple: 1 (number, required)
+ exchange: 1 (number, required)
+ time_exchange: `2018-04-01` (string, required)
+ active: true (boolean, required)

### EmployeesStructure
+ id_employee: 1 (number, required)
+ login: `ivanov` (string)
+ name_employee: `Иванов` (string)
+ passwd: `password` (string)
+ bar_code: `2800000000011` (string)
+ id_profile: 1 (number, required)
+ show_in_doc: true (boolean, required)
+ all_outlets: true (boolean, required)
+ active: true (boolean, required)

### ProfileStructure
+ id_profile: 1 (number, required)
+ id_permissions_list: 1 (number, required)
+ name: `Кассир` (string)
+ active: true (boolean, required)

### PermissionsListStructure
+ id_permissions_list: 1 (number, required)
+ id_permission: 1 (number, required)

### PermissionsStructure
+ id_permission: 1 (number, required)
+ name: `перезагружать ПК` (string, required)

### TellerSettingsStructure
+ id_setting: 1 (number, required)
+ name_teller_setting: Основная настройка (string)
+ print_clishe: 1 (number, default) 
+ count_head: 3 (number, default)
+ count_footer: 0 (number, default)
+ count_head_repl: 3 (number, default)
+ count_footer_repl: 0 (number, default)
+ print_count_sell: 0 (number, default)
+ print_code_goods: 0 (number, default)
+ print_name_operator: 0 (number, default)
+ print_number_check: 0 (number, default)
+ separate_sum: 1 (number, default)
+ permitted_number_copies: 0 (number)
+ count_service_check: 0 (number)
+ check_head_1 (string)
+ check_head_2 (string)
+ check_head_3 (string)
+ check_head_4 (string)
+ check_head_5 (string)
+ check_head_6 (string)
+ check_footer_1 (string)
+ check_footer_2 (string)
+ check_footer_3 (string)
+ check_footer_4 (string)
+ check_footer_5 (string)
+ check_head_repl_1 (string)
+ check_head_repl_2 (string)
+ check_head_repl_3 (string)
+ check_head_repl_4 (string)
+ check_head_repl_5 (string)
+ check_head_repl_6 (string)
+ check_footer_repl_1 (string)
+ check_footer_repl_2 (string)
+ check_footer_repl_3 (string)
+ check_footer_repl_4 (string)
+ check_footer_repl_5 (string)
+ active: true (boolean, default)

### GoodsOnWorkplaceStructure
+ id_goods: 1 (number, required)
+ id_workplace: 1 (number, required)
+ active: true (boolean, default)

### PluStructure
+ id_plu: 1 (number, required)
+ id_goods: 1 (number, required)
+ active: true (boolean, default)

### AdditionalTextStructure
+ id_text: 1 (number, required)
+ additional_text: `Дополнительный текст` (string,required)
+ active: true (boolean, default)

### ModificatorGroupsStructure
+ id_modificator_group: 1 (number, required)
+ modificator_group_name: `Новая группа модификаторов` (string)
+ active: true (boolean, default)

### MapPrefixToDirectPayStructure
+ prefix: `8067` (string,required)
+ id_goods: 1 (number,required)
+ active: true (boolean, default)

### MaskBarCodeStructure
+ id_mask: 1 (number, required)
+ name_bar_code: `Весовой` (string,required)
+ mask_bar_code: `21GGGGGWWWWWC` (string,required)
+ active: true (boolean, default)

### MessageTextStructure
+ id_message_text: 1 (number, required)
+ text_message: `Текст шаблона сообщения` (string,required)
+ active: true (boolean, default)

### CommandStructure
+ command : `12345` (string,required)
+ id_action: 100 (number, required)
+ active: true (boolean, default)

### CommandActionsStructure
+ idAction: 100 (number, required)
+ description: `Принудительный старт синхронизации` (string,required)

### RoleStructure
+ id_role: 10 (number, required)
+ name_role: `Оператор` (string)
+ description: `Оператор по работе с данными` (string)
+ default_role: 0 (number)

### RoleActionStructure
+ id_role: 1 (number,required)  
+ id_resource: 1 (number,required) 
+ parent_id_resource: 1 (number,required) 
+ name: `Invoice` (string,required)
+ route: `/docs/invoice` (string,required)
+ allowed: true (boolean,required)
+ readonly: false (boolean,required)

### RoleActionTreeStructure
+ id_role: 1 (number,required)  
+ id_resourse: 1 (number,required) 
+ parent_id_resourse: 1 (number,required) 
+ name: `Invoice` (string,required)
+ route: `/docs/invoice` (string,required)
+ allowed: true (boolean,required)
+ readonly: false (boolean,required)
+ children: [] (array[RoleActionTreeStructure], required)

### UserObjectStructure
+ id_user_object: 2001 (number,required)
+ id_user: 1 (number,required)
+ type: `outlet` (string,required)
+ id_object: 1 (number,required)
+ name: `Киоск № 18` (string,required)
+ parent_id_user_object: 1001 (number,required)
+ parent_type: `groupoutlet` (string,required)
+ parent_id_object: 1 (number,required)
+ allowed: true (boolean,required)
+ children: [] (array[UserObjectStructure], required)

### UserStructure
+ id_user: 1 (number,required) 
+ username: `user` (string,required)
+ lastname: `Ivanov` (string)
+ firstname: `Ivan` (string)
+ email: `user@trest.com` (string)
+ password: `12345` (string, optional)
+ lastvisit_at: `2018-04-01 12:00` (string)
+ superuser: 0 (number, default)
+ status: 0 (number, default)
+ id_role: 1 (number,required)
+ id_buyer: 1 (number,optional)

### InvoiceHeadStructure
+ id_doc: 1 (number,required)
+ date_doc: `2017-12-04 15:33:00+02` (string, required)
+ number_doc: `00001`  (string, required)
+ id_outlet: 1 (number,required)
+ id_workplace: 1 (number,optional)
+ id_employee: 1 (number,optional)
+ id_client: 1 (number,required)
+ status: 0 (number,default)

### InvoiceTableStructure
+ id_line: 1 (number,required)
+ id_doc: 1 (number,required)
+ date_doc: `2017-12-04 15:33:00+02` (string, required)
+ number_doc: `00001`  (string, required)
+ consecutive: 1 (number,required)
+ id_goods:  1 (number,required)
+ id_unit:  1 (number,required)
+ id_series:  `-` (string)
+ quantity: 10 (number,required)
+ price: 10 (number,required)

###RefundHeadStructure
+ id_doc: 1 (number,required)
+ date_doc: `2017-12-04 15:33:00+02` (string, required)
+ number_doc: `00001`  (string, required)
+ id_outlet: 1 (number,required)
+ id_workplace: 1 (number,optional)
+ id_employee: 1 (number,optional)
+ id_client: 1 (number,required)
+ status: 0 (number,default)

### RefundTableStructure
+ id_line: 1 (number,required)
+ id_doc: 1 (number,required)
+ date_doc: `2017-12-04 15:33:00+02` (string, required)
+ number_doc: `00001`  (string, required)
+ consecutive: 1 (number,required)
+ id_goods:  1 (number,required)
+ id_unit:  1 (number,required)
+ id_series:  `-` (string)
+ quantity: 10 (number,required)
+ price: 10 (number,required)

### MassiveDocAddLogStructure
+ id: 1 (number,required)
+ id_goods: 1 (number,required)
+ name_goods: `Товар` (string,required)
+ id_unit: 1 (number,optional)
+ name_unit: `шт` (string,optional)
+ id_series:  `-` (string,optional)
+ name_series:  `-` (string,optional)
+ message: `Цена не найдена` (string,required) 
+ critical: false (boolean,required)


### CountStructure
+ count: 10 (number, required)

### PasswordStructure
+ password: `123` (string,required)
+ password_old: `123` (string,optional)

#Group Аутентификация пользователя
Аутентификация производится на основе cookie.
После успешной аутентификации пользователю отправляется cookie `PHPSESSID`.
Также будут установлены cookie:
- `lang` - текущий язык
- `currency` - текущая валюта

*Данный метод аутентификации используется временно как зависимость от текущей архитектуры.
В будущем планируется заменить на JWT.*


## Аутентификация [/user/loginApi]

### Вход в систему [POST]

+ Request (application/json)

    + Attributes (LoginStructure)
            
+ Response 200 (application/json)

    + Attributes (ResponseResultStructure)

## Выход из системы [/user/logoutApi]

### Выход [GET]

+ Response 200 (application/json)

    + Attributes (ResponseResultStructure)


#Group Группы товаров 

## Дерево групп товаров [/api/groupsGoods/tree{?active,order}]

### Получить все группы товаров в виде дерева [GET]

+ Parameters 

    + active (string, optional) - Если параметр присутствует и равен "true", то возвращается дерево, с использованием только активных групп товаров.
    + order (string, optional) - Список полей сортировки через запятую без пробелов. Для обратной сортировки поставить `-` перед именеи поля.

+ Response 200 (application/json)

    + Attributes (array[GroupsGoodsTreeStructure])

## Список групп товаров [/api/groupsGoods/list{?active,ids_list,filters,order,offset,limit}]

### Получить все группы товаров в виде списка [GET]

+ Parameters 

    + active (string, optional) - Если параметр присутствует и равен "true", то возвращается дерево, с использованием только активных групп товаров.
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + order (string, optional) - Список полей сортировки через запятую без пробелов. Для обратной сортировки поставить `-` перед именеи поля.
    + offset (number, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (number, optional) - Возвращать указанное количество записей

+ Response 200 (application/json)

    + Attributes (array[GroupsGoodsListStructure])


## Количество групп товаров [/api/groupsGoods/count{?filters,ids_list,active}]

### Получить количество групп товаров  [GET]
Возвращает количество записей    

+ Parameters

    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + active (string, optional) - Если параметр равен "true", то учитываются только активные записи.

+ Response 200 (application/json)

    + Attributes (CountStructure)  



## Добавление группы товаров [/api/groupsGoods/tree{?unprotect_keys}]

### Добавить группу товаров [POST]
- Атрибут `id_group` в JSON-е запроса  игнорируется, если не указан параметр `unprotect_keys=true`.

+ Parameters

    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)

    + Request (application/json)

    + Attributes (GroupGoodsStructure)    
            
+ Response 201 (application/json)

    + Headers

            Location: /api/groupsGoods/1

    + Attributes (GroupGoodsStructure)    

    
## Группа товаров [/api/groupsGoods/{id_group}{?unprotect_keys}]

### Получить группу товаров [GET]
Получение группы товаров.

+ Parameters

    + id_group (number) - Код группы товаров - целое число

+ Response 200 (application/json)

    + Attributes (GroupGoodsStructure)

### Изменить группу товаров [PUT]
Изменение группы товаров. 
- Атрибут `id_group` в JSON-е запроса  игнорируется, если не указан параметр `unprotect_keys=true`.

+ Parameters

    + id_group (number) - Код группы товаров - целое число
    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)

    + Attributes (GroupGoodsStructure)
            
+ Response 200 (application/json)

    + Attributes (GroupGoodsStructure)

### Деактивировать группу товаров [DELETE]
Деактивация группы товаров

+ Parameters

    + id_group (number) - Код группы товаров - целое число

+ Response 204


#Group Товары

## Список товаров [/api/goods{?id_group,immediate_parent,order,ids_list,filters,active,type_goods,offset,limit,unprotect_keys}]

### Получить список товаров [GET]
Получение списка товаров. Если не указывать код группы, возвращаются все товары, если immediate_parent не равен "true", будут возвращены также товары, которые входят в подчиненные группы, указаной группы товаров 

+ Parameters

    + id_group (integer, optional) - Код группы товаров, к которой принадлежит товар
    + immediate_parent (string, optional) - Если параметр равен "true", то возвращаются товары, принадлежащие непосредственно к данной группе
    + order (string, optional) - Список полей сортировки через запятую без пробелов. Для обратной сортировки поставить `-` перед именеи поля.
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + active (string, optional) - Если параметр равен "true", то возвращаются только активные товары.
    + offset (integer, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (integer, optional) - Возвращать указанное количество записей
    
+ Response 200 (application/json)

    + Attributes (array[GoodsStructure])
    

### Добавить товар [POST]
Добавление нового товара. 
- Атрибут id_goods в JSON-е запроса игнорируется (значение будет установлено автоматически), если не указан параметр `unprotect_keys=true`
- В таблицу front.series будет добавлена запись с серией по умолчанию для данного товара ("-")

+ Parameters

    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)

    + Attributes (GoodsStructure)
            
            
+ Response 201 (application/json)

    + Headers

            Location: /api/goods/1

    + Attributes (GoodsStructure)
    
## Количество товаров [/api/goods/count{?id_group,immediate_parent,ids_list,filters,active,type_goods}]

### Получить количество товаров [GET]
Возвращает количество записей 

+ Parameters

    + id_group (integer, optional) - Код группы товаров, к которой принадлежит товар
    + immediate_parent (string, optional) - Если параметр равен "true", то возвращаются товары, принадлежащие непосредственно к данной группе
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + active (string, optional) - Если параметр равен "true", то возвращаются только активные товары.

+ Response 200 (application/json)

    + Attributes (CountStructure)

## Товар [/api/goods/{id_goods}{?unprotect_keys}]

### Получить товар [GET]
Получение товара по коду

+ Parameters

    + id_goods (integer, required) - Код товара

+ Response 200 (application/json)

    + Attributes (GoodsStructure)

### Изменить товар [PUT]
Изменение товара. 
- Попытка изменить id_goods игнорируется

+ Parameters

    + id_goods (integer, required) - Код товара

+ Request (application/json)

    + Attributes (GoodsStructure)
            
+ Response 200 (application/json)

    + Attributes (GoodsStructure)

### Деактивировать товар [DELETE]
Деактивация товара

+ Parameters

    + id_goods (integer, required) - Код товара

+ Response 204   

## Типы товаров [/api/typesGoods]
Типы товаров нельзя редактировать. Только получить список.

### Получить список типов товаров [GET]

+ Response 200 (application/json)

    + Attributes (array[TypesGoodsStructure])


#Group Штрих-коды

## Список штрих-кодов [/api/barCodes{?bar_code,id_goods,filters,active,order,offset,limit}]

### Получить список штрих-кодов [GET]

+ Parameters

    + bar_code (integer, optional) - Штрих-код товара. Если указать, будет возвращен список для данного штрих-кода
    + id_goods (integer, optional) - Код товара. Если указать, будет возвращен список для данного товара
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + order (string, optional) - Список полей сортировки через запятую без пробелов. Для обратной сортировки поставить `-` перед именеи поля.
    + offset (integer, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (integer, optional) - Возвращать указанное количество записей
    
+ Response 200 (application/json)

    + Attributes (array[BarCodesStructure])   

### Добавить штрих-код [POST]
Ключевые атрибуты `bar_code`, `id_goods`, `id_unit`, `ext_bar_code`, `id_series` в JSON-е запроса стандартно игнорирутся. 
**Для добавления штрих-кода использовать параметр `unprotect_keys=true` и указывать значения ключевых полей в теле запроса**.

+ Request (application/json)

    + Attributes (BarCodesStructure)  
                

+ Response 201 (application/json)

    + Headers

            Location: /api/barCodes/1/1/1/1/1

    + Attributes (BarCodesStructure)  
    
## Количество штрих-кодов [/api/barCodes/count{?id_goods,bar_code,filters,active}]

### Получить количество штрих-кодов [GET]
Возвращает количество записей 

+ Parameters

    + id_goods (integer, optional) - Код товара
    + bar_code (string, optional) - Штрих-код
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + active (string, optional) - Если параметр равен "true", то возвращаются только активные товары.

+ Response 200 (application/json)

    + Attributes (CountStructure)    
    
            
## Штрих-код [/api/barCodes/{bar_code}/{id_goods}/{id_unit}/{?ext_bar_code}/{?id_series}]

### Получить данные о штрих-коде [GET]
- Параметры `ext_bar_code`, `id_series` можно опускать, если для обоих используются значения по умолчанию.
- Для указания значения по умолчанию для параметра `ext_bar_code` или `id_series` использовать слово `default`

+ Parameters
    + bar_code (integer, required) - Штрих-код товара
    + id_goods (integer, required) - Код товара
    + id_unit (integer, required) - Код единицы измерения
    + ext_bar_code (string, required) - Расширенный штрих-код
    + id_series (string, required) - Код серии

+ Response 200 (application/json)

    + Attributes (BarCodesStructure)
    
            
### Изменить данные о штрих-коде [PUT]
Ключевые атрибуты `bar_code`, `id_goods`, `id_unit`, `ext_bar_code`, `id_series` в JSON-е запроса стандартно игнорирутся. 
- Для изменения ключевых полей использовать параметр `unprotect_keys=true`

+ Parameters
    + bar_code (integer, required) - Штрих-код товара
    + id_goods (integer, required) - Код товара
    + id_unit (integer, required) - Код единицы измерения
    + ext_bar_code (string, required) - Расширенный штрих-код
    + id_series (string, required) - Код серии
+ Request (application/json)

    + Attributes (BarCodesStructure)
            
+ Response 200 (application/json)

    + Attributes (BarCodesStructure)
            
### Деактивировать данные о штрих-коде [DELETE]

+ Response 204     
    

#Group Контрагенты

## Список контрагентов [/api/clients{?is_supplier,is_buyer,ids_list,filters,with,active,order,offset,limit,unprotect_keys}]

### Получить список контрагентов [GET]
Получение списка контрагентов. Если не указаны дополнительные параметры, возвращаются сразу и поставщики, и покупатели.
Параметры supplier, buyer со значением true дают возможность получать отдельно списки поставщиков или покупателей

+ Parameters
    + is_supplier (string, optional) - Если параметр равен "true", то возвращается (добавляется запись) список покупателей 
    + is_buyer (string, optional) - Если параметр равен "true", то возвращается (добавляется запись) список ппоставщиков 
    + ids_list (string, optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: priceLevel, discountCards  
    + active (string, optional) - Если параметр равен "true", то возвращаются только активные контрагенты.
    + order (string, optional) - Список полей сортировки через запятую без пробелов    
    + offset (integer, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (integer, optional) - Возвращать указанное количество записей
    
+ Response 200 (application/json)

    + Attributes (array[ClientsStructure])  
    

### Добавить контрагента [POST]
Добавление контрагента. Атрибут id_client в JSON-е запроса стандартно игнорируется.

+ Parameters

    + unprotect_keys (string, optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)

    + Attributes (ClientsStructure)  
            
+ Response 201 (application/json)
    
    + Headers

            Location: /api/client/1

    + Attributes (ClientsStructure)  
            
## Количество контрагентов [/api/clients/count{?is_supplier,is_buyer,ids_list,filters,active}]

### Получить количество контрагентов [GET]
Возвращает количество записей    

+ Parameters

    + is_supplier (string, optional) - Если параметр равен "true", то учитываются покупатели 
    + is_buyer (string, optional) - Если параметр равен "true", то учитываются поставщики 
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>    
    + active (string, optional) - Если параметр равен "true", то учитываются только активные контрагенты.

+ Response 200 (application/json)

    + Attributes (CountStructure)             
            
## Контрагент [/api/clients/{id_client}{?unprotect_keys,with}]

### Получить данные о контрагенте [GET]
Получение данных о клиенте по коду

+ Parameters

    + id_client (integer, required) - Код клиента
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: priceLevel, discountCards  

+ Response 200 (application/json)

    + Attributes (ClientsStructure)  
            
### Изменить данные о контрагенте [PUT]
Изменение данных о клиенте. Атрибут id_client в JSON-е запроса стандартно игнорируется.

+ Parameters

    + id_client (integer, required) - Код клиента
    + unprotect_keys (string, optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)

    + Attributes (ClientsStructure)  
            
+ Response 200 (application/json)

    + Attributes (ClientsStructure)  
            
### Деактивировать данные о контрагенте [DELETE]
Деактивация данных о контрагенте.

+ Parameters

    + id_client (integer, required) - Код клиента

+ Response 204     


#Group Налоги

## Список налогов [/api/taxes{?active,order,offset,limit,unprotect_keys}]

### Получить список налогов [GET]
Получение всех записей

+ Parameters

    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + order (string, optional) - Список полей сортировки через запятую без пробелов      
    + offset (integer, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (integer, optional) - Возвращать указанное количество записей
    
+ Response 200 (application/json)

    + Attributes (array[TaxesStructure]) 

### Добавить налог [POST]
Добавление нового налога. Атрибут id_tax в JSON-е запроса стандартно игнорируется.

+ Parameters

    + unprotect_keys (string, optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)

    + Attributes (TaxesStructure) 
            
+ Response 200 (application/json)

    + Headers

            Location: /api/taxes/1

    + Attributes (TaxesStructure) 

    
## Количество налогов [/api/taxes/count{?active}]

### Получить количество налогов [GET]
Возвращает количество записей    

+ Parameters

    + active (string, optional) - Если параметр равен "true", то учитываются только активные записи.

+ Response 200 (application/json)

    + Attributes (CountStructure)      
    
            
## Налог [/api/taxes/{id_tax}{?unprotect_keys}]

+ Parameters

    + id_tax (integer, required) - Код налога
    + unprotect_keys (string, optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

### Получить данные о налоге [GET]
Получение записи по коду

+ Response 200 (application/json)

    + Attributes (TaxesStructure) 
            
### Изменить данные о налоге [PUT]
Изменение данных о налоге. Атрибут id_tax в JSON-е запроса игнорируется.

+ Request (application/json)

    + Attributes (TaxesStructure) 
            
+ Response 200 (application/json)

    + Attributes (TaxesStructure) 
            
### Деактивировать данные о налоге [DELETE]

+ Response 204     


## Список групп налоговых ставок [/api/groupsTaxes{?active,order,offset,limit}]

### Получить список групп налоговых ставок [GET]
Получить список всех групп налоговых ставок

+ Parameters

    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + order (string, optional) - Список полей сортировки через запятую без пробелов    
    + offset (integer, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (integer, optional) - Возвращать указанное количество записей

+ Response 200 (application/json)

    + Attributes (array[GroupsTaxesStructure])   
    
### Добавить группу налоговых ставок [POST]
Добавление новой группы налоговых ставок.
- Атрибут `id_group_tax` в JSON-е запроса игнорируется (значение будет установлено автоматически), если не указан параметр `unprotect_keys=true`

+ Request (application/json)

    + Attributes (GroupsTaxesStructure) 
            
+ Response 200 (application/json)

    + Headers

            Location: /api/groupsTaxes/1

    + Attributes (GroupsTaxesStructure)   
    
    
## Количество групп налоговых ставок [/api/groupsTaxes/count{?active}]

### Получить количество налогов [GET]
Возвращает количество записей    

+ Parameters

    + active (string, optional) - Если параметр равен "true", то учитываются только активные записи.

+ Response 200 (application/json)

    + Attributes (CountStructure)      
        

## Группа налоговых ставок [/api/groupsTaxes/{id_group_tax}]

+ Parameters
    + id_group_tax (integer, required) - Код группы налоговых ставок

### Получить данные о группе налоговых ставок [GET]
Получение записи по коду

+ Response 200 (application/json)

    + Attributes (GroupsTaxesStructure)     

### Изменить данные о группе налоговых ставок [PUT]
Изменение группы налоговых ставок.
- Атрибут `id_group_tax` в JSON-е запроса игнорируется, если не указан параметр `unprotect_keys=true`

+ Request (application/json)

    + Attributes (GroupsTaxesStructure) 
            
+ Response 200 (application/json)

    + Attributes (GroupsTaxesStructure) 

### Деактивировать данные о группе налоговых ставок [DELETE]

+ Response 204  
            
#Group Цены

## Список цен [/api/prices{?id_goods,active,order,offset,limit}]

### Получить все цены [GET]

+ Parameters

    + id_goods (integer, optional) - Код товара. Если указать, будет возвращен список цен для конкретного товара
    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + order (string, optional) - Список полей сортировки через запятую без пробелов      
    + offset (integer, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (integer, optional) - Возвращать указанное количество записей
    
+ Response 200 (application/json)

    + Attributes (array[PricesStructure])   

### Добавить цену [POST]
Ключевые атрибуты `id_goods`, `id_unit`, `id_price_level`, `id_series` в JSON-е запроса стандартно игнорирутся. 
**Для добавления цены использовать параметр `unprotect_keys=true` и указывать значения ключевых полей в теле запроса**.

+ Request (application/json)

    + Attributes (PricesStructure)  
                

+ Response 201 (application/json)

    + Headers

            Location: /api/prices/1/1/1/1

    + Attributes (PricesStructure)  
    
    
## Количество цен [/api/prices/count{?id_goods,active}]

### Получить количество цен [GET]
Возвращает количество записей    

+ Parameters

    + id_goods (integer, optional) - Код товара. Если указать, будет учитываются цены для конкретного товара
    + active (string, optional) - Если параметр равен "true", то учитываются только активные записи.

+ Response 200 (application/json)

    + Attributes (CountStructure)      
        
    
## Цена [/api/price/{id_goods}/{id_unit}/{id_price_level}/{?id_series}]

### Получить данные о цене [GET]
Параметр `id_series`, опускается, если используется значение серии по умолчанию "-".

+ Parameters
    + id_goods (integer, required) - Код товара
    + id_unit (integer, required) - Код единицы измерения
    + id_price_level (integer, required) - Код уровня цен
    + id_series (string, optional) - Код серии. Если не указан, предполагается "-"   

+ Response 200 (application/json)

    + Attributes (PricesStructure)
    
            
### Изменить данные о цене [PUT]
Ключевые атрибуты `id_goods`, `id_unit`, `id_price_level`, `id_series` в JSON-е запроса стандартно игнорирутся. 

+ Parameters
    + id_goods (integer, required) - Код товара
    + id_unit (integer, required) - Код единицы измерения
    + id_price_level (integer, required) - Код уровня цен
    + id_series (string, optional) - Код серии. Если не указан, предполагается "-"   

+ Request (application/json)

    + Attributes (PricesStructure)
            
+ Response 200 (application/json)

    + Attributes (PricesStructure)
            
### Деактивировать данные о цене [DELETE]

+ Response 204     


#Group Уровни цен

## Список уровней цен [/api/priceLevels{?active,order,offset,limit}]

### Получить все уровни цен [GET]
Получение списка всех уровней цен

+ Parameters

    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + order (string, optional) - Список полей сортировки через запятую без пробелов        
    + offset (integer, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (integer, optional) - Возвращать указанное количество записей

+ Response 200 (application/json)

    + Attributes (array[PriceLevelsStructure])   
            
### Добавить уровень цен [POST]
Добавление уровня цен.  Атрибут `id_price_level` в JSON-е запроса стандартно игнорируется, если не указан параметр `unprotect_keys=true` (заполняется автоматически).

+ Request (application/json)

    + Attributes (PriceLevelsStructure)   
                
+ Response 201 (application/json)

    + Headers

            Location: /api/priceLevels/1

    + Attributes (PriceLevelsStructure)      
    
    
## Количество уровней цен [/api/priceLevels/count{?active}]

### Получить количество уровней цен [GET]
Возвращает количество записей    

+ Parameters

    + active (string, optional) - Если параметр равен "true", то учитываются только активные записи.

+ Response 200 (application/json)

    + Attributes (CountStructure)      
            

## Уровень цен [/api/priceLevels/{id_price_level}]

+ Parameters

    + id_price_level (integer, required) - Код уровня цен

### Получить данные об уровне цен [GET]
Получение данных об уровне цен

+ Response 200 (application/json)

    + Attributes (PriceLevelsStructure)   

### Изменить данные об уровне цен [PUT]
Атрибут `id_price_level` в JSON-е запроса стандартно игнорируется, если не указан параметр `unprotect_keys=true`

+ Request (application/json)

    + Attributes (PriceLevelsStructure)  
            
+ Response 200 (application/json)

    + Attributes (PriceLevelsStructure)  
            
### Деактивировать данные о цене [DELETE]

+ Response 204     


#Group Единицы измерения

## Список единиц измерения для товара [/api/units{?id_goods,active,order,offset,limit}]

### Получить все единицы измерения [GET]
Получение списка всех единиц измерения. Если указан параметр id_goods, возвращаются единицы измерения для конкретного товара

+ Parameters

    + id_goods (integer, optional) - Код товара, Если указан, возвращаются единицы измерения только для данного товара
    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + order (string, optional) - Список полей сортировки через запятую без пробелов     
    + offset (integer, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (integer, optional) - Возвращать указанное количество записей
    
+ Response 200 (application/json) 

    + Attributes (array[UnitsStructure])   
    
### Добавить единицу измерения [POST]
Добавление единицы измерения.  Атрибут `id_unit` в JSON-е запроса стандартно игнорируется и заполняется автоматически. 
Для указания вручную необходимо использовать параметр `unprotect_keys=true`.

+ Request (application/json)

    + Attributes (UnitsStructure)   
                

+ Response 201 (application/json)

    + Headers

            Location: /api/units/1/1

    + Attributes (UnitsStructure)          

    
## Количество единиц измерения [/api/units/count{?id_goods,active}]

### Получить количество единиц измерения  [GET]
Возвращает количество записей    

+ Parameters

    + id_goods (integer, optional) - Код товара, Если указан, учитываются единицы измерения только для данного товара
    + active (string, optional) - Если параметр равен "true", то учитываются только активные записи.

+ Response 200 (application/json)

    + Attributes (CountStructure)      
            

## Единица измерения [/api/units/{id_goods}/{id_unit}]

+ Parameters
    + id_goods (integer, required) - Код товара
    + id_unit (integer, required) - Код единицы измерения

### Получить данные о единице измерения [GET]
Получение данных о единице измерения по коду товара и коду единицы измерения

+ Response 200 (application/json)

    + Attributes (UnitsStructure)
            
### Изменить данные о единице измерения [PUT]
Изменение данных о единице измерения. 
Атрибуты `id_goods`, `id_unit` в JSON-е запроса стандартно игнорирутся. 

+ Request (application/json)

    + Attributes (UnitsStructure)
            
+ Response 200 (application/json)

    + Attributes (UnitsStructure)
            
### Деактивировать данные о единице измерения [DELETE]

+ Response 204         


## Список типов единиц измерения [/api/typesUnits]

### Получить все типы единиц измерения [GET]
Получение списка типов единиц измерения товаров.

+ Response 200 (application/json)
    
    + Attributes (array[TypesUnitsStructure])
            

#Group Серии

## Список серий [/api/series{?id_goods,active,order,offset,limit,unprotect_keys}]

### Получить все серии [GET]
Получение списка всех серий. Если указан параметр id_goods, возвращаются серии для конкретного товара

+ Parameters

    + id_goods (integer, required) - Код товара, Если указан, возвращаются серии только для данного товара
    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + order (string, optional) - Список полей сортировки через запятую без пробелов      
    + offset (integer, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (integer, optional) - Возвращать указанное количество записей

+ Response 200 (application/json)

    + Attributes (array[SeriesStructure])   
    
### Добавить серию для товара [POST]
Добавление новой серии для товара.  
- Атрибуты `id_goods`, `id_series` в JSON-е запроса игнорируется, если не указан параметр `unprotect_keys=true`.
Значение `id_series` будет установлено автоматически. Значение `id_goods` передается соответствующим параметром. 
- Добавление записи серии по умолчанию ("-") происходит автоматически при создании нового товара.

+ Parameters

    + id_goods (integer, required) - Код товара 
    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)

    + Attributes (SeriesStructure)   
                
+ Response 201 (application/json)

    + Headers

            Location: /api/series/1/1

    + Attributes (SeriesStructure) 
   

    
## Количество серий [/api/series/count{?id_goods,active}]

### Получить количество серий  [GET]
Возвращает количество записей    

+ Parameters

    + id_goods (integer, optional) - Код товара, Если указан, учитываются серии только для данного товара
    + active (string, optional) - Если параметр равен "true", то учитываются только активные записи.

+ Response 200 (application/json)

    + Attributes (CountStructure)      
            
   
   
            
## Серия [/api/series/{id_goods}/{id_series}{?unprotect_keys}]

### Получить данные о серии товара [GET]
Получение данных о серии товара по коду товара и коду серии

+ Parameters
    + id_goods (integer, required) - Код товара
    + id_series (string, required) - Код серии

+ Response 200 (application/json)

    + Attributes (SeriesStructure) 
            
### Изменить данные о серии товара [PUT]
Изменение данных о серии товара по коду товара и коду серии

+ Parameters

    + id_goods (integer, required) - Код товара
    + id_series (string, required) - Код серии.
    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)

    + Attributes (SeriesStructure) 
            
+ Response 200 (application/json)

    + Attributes (SeriesStructure) 
            
### Деактивировать данные о серии товара [DELETE]

Деактивация данных о серии

+ Parameters

    + id_goods (integer, required) - Код товара
    + id_series (string, required) - Код серии

+ Response 204


#Group Составные товары

## Состав составных товаров [/api/contain/{?id_contain_goods,with,active,filters,order,offset,limit}]

### Получить список товаров составных товаров [GET]
Получение содержимого составных товаров.

+ Parameters

    + id_contain_goods (integer, optional) - Код составного товара 
    + with (string,optional) - Связанные данные. Возможные связи: containGoods, goods, unit, series, price_income. Названия связей указываются через запятую без пробелов.
    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + filters (string, optional) - Строка формата `field_name::filter|field_nameN::filterN`. Фильтрация записей. Производится текстовое сравнение. 
    + order (string, optional) - Список полей сортировки через запятую без пробелов      
    + offset (integer, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (integer, optional) - Возвращать указанное количество записей

+ Response 200 (application/json)

    + Attributes (array[ContainStructure])   

### Добавить товар в составной товар [POST]
Добавление нового товара в содержимое составного товара 

+ Parameters

     + id_contain_goods (integer,required) - Код составного товара 

+ Request (application/json)

    + Attributes (ContainStructure)   
                
+ Response 201 (application/json)

    + Headers

            Location: /api/contain/1/1/1/1

    + Attributes (SeriesStructure) 
   

## Количество записей товаров в составном товаре [/api/contain/count/{?id_contain_goods,active,filters}]

### Получить количество записей товаров  [GET]
Возвращает количество записей    

+ Parameters

    + id_contain_goods (integer, required) - Код составного товара 
    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + filters (string, optional) - Строка формата `field_name::filter|field_nameN::filterN`. Фильтрация записей. Производится текстовое сравнение.

+ Response 200 (application/json)

    + Attributes (CountStructure)      
            

## Товар в составном товаре [/api/contain/{id_contain_goods}/{id_goods}/{id_unit}/{id_series}{?unprotect_keys,with}]

### Получить данные о товаре в составном товаре [GET]
Получение данных о товаре в составном товаре

+ Parameters
    + id_contain_goods (integer, required) - Код составного товара 
    + with (string, optional) - Связанные данные. Возможные связи: containGoods, goods, unit, series, price_income. Названия связей указываются через запятую без пробелов.
    + id_goods (integer, required) - Код товара в составе
    + id_unit (integer, required) - Код единицы измерения
    + id_series (string, required) - Код серии

+ Response 200 (application/json)

    + Attributes (ContainStructure) 
    

### Изменить данные о товаре в составе составного товара [PUT]
Изменение данных товаре в составном товаре

+ Parameters
    + id_contain_goods (integer, required) - Код составного товара (часть ключа)
    + id_goods (integer, required) - Код товара в составе (часть ключа)
    + id_unit (integer, required) - Код единицы измерения (часть ключа)
    + id_series (string, required) - Код серии (часть ключа)
    + unprotect_keys (string,optional) - Если параметр существует и равен "true" значения ключевых полей не игнорируются
+ Request (application/json)

    + Attributes (SeriesStructure) 
            
+ Response 200 (application/json)

    + Attributes (SeriesStructure) 

### Деактивировать товар в составе составного товара [DELETE]
Деактивация записи о товаре в составе составного товара

+ Parameters

    + id_contain_goods (integer, required) - Код составного товара 
    + id_goods (integer, required) - Код товара в составе
    + id_unit (integer, required) - Код единицы измерения
    + id_series (string, required) - Код серии    

+ Response 204


#Group Дисконтные карты

## Список дисконтных карт [/api/discountCards{?active,order,id_client,with,filters,ids_list,offset,limit,unprotect_keys}]

### Получить список дисконтных карт [GET]
Получение списка всех дисконтных карт.

+ Parameters

    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + order (string, optional) - Список полей сортировки через запятую без пробелов      
    + id_client (integer,optional) - Код клиента
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: priceLevel, discountCardType, client  
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + ids_list (string,optional) - Список идентификаторов дисконтных карт, которые нужно возвратить. Указывается через запятую без пробела 
    + offset (integer, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (integer, optional) - Возвращать указанное количество записей

+ Response 200 (application/json)

    + Attributes (array[DiscountCardsStructure])   

### Добавить дисконтную карту [POST]
Добавление дисконтной карты.  
- Атрибут `id_discount_card` в JSON-е запроса игнорируется, если не указан параметр `unprotect_keys=true`.

+ Parameters

    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)

    + Attributes (DiscountCardsStructure)   
                
+ Response 201 (application/json)

    + Headers

            Location: /api/discountCards/1/1

    + Attributes (DiscountCardsStructure) 
   

    
## Количество дисконтных карт [/api/discountCards/count{?id_client,filters,ids_list,active}]

### Получить количество дисконтных карт  [GET]
Возвращает количество записей    

+ Parameters
    + id_client (integer,optional) - Код клиента
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + active (string, optional) - Если параметр равен "true", то учитываются только активные записи.

+ Response 200 (application/json)

    + Attributes (CountStructure)      
            
     
## Дисконтная карта [/api/discountCards/{id_discount_card}/{?unprotect_keys,with}]

### Получить данные о дисконтной карте [GET]
Получение данных о дисконтной карте

+ Parameters
    + id_discount_card (integer, required) - Код дисконтной карты
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: priceLevel, discountCardType, client      

+ Response 200 (application/json)

    + Attributes (DiscountCardsStructure) 

### Изменить данные о дисконтной карте [PUT]
Изменение данных о дисконтной карте по коду

+ Parameters

    + id_discount_card (integer, required) - Код дисконтной карты
    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: priceLevel, discountCardType, client  

+ Request (application/json)

    + Attributes (DiscountCardsStructure) 
            
+ Response 200 (application/json)

    + Attributes (DiscountCardsStructure) 
            
### Деактивировать данные о дисконтной карте [DELETE]

Деактивация данных о дисконтной карте

+ Parameters

    + id_discount_card (integer, required) - Код дисконтной карты

+ Response 204



#Group Типы дисконтных карт

## Список типов дисконтных карт [/api/discountCardTypes{?active,order,filters,ids_list,offset,limit,unprotect_keys}]

### Получить список типов дисконтных карт [GET]
Получение списка всех типов дисконтных карт.

+ Parameters

    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + order (string, optional) - Список полей сортировки через запятую без пробелов      
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + offset (integer, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (integer, optional) - Возвращать указанное количество записей

+ Response 200 (application/json)

    + Attributes (array[DiscountCardTypesStructure])   
    
### Добавить тип дисконтных карт [POST]
Добавление типа дисконтных карт.  
- Атрибут `id_dcard_type` в JSON-е запроса игнорируется, если не указан параметр `unprotect_keys=true`.

+ Parameters

    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)

    + Attributes (DiscountCardTypesStructure)   
                
+ Response 201 (application/json)

    + Headers

            Location: /api/discountCardTypes/1

    + Attributes (DiscountCardTypesStructure) 
   

    
## Количество типов дисконтных карт [/api/discountCardTypes/count{?filters,ids_list,active}]

### Получить количество типов дисконтных карт  [GET]
Возвращает количество записей    

+ Parameters

    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + active (string, optional) - Если параметр равен "true", то учитываются только активные записи.

+ Response 200 (application/json)

    + Attributes (CountStructure)      
            

## Тип дисконтной карты [/api/discountCardTypes/{id_dcard_type}/{?unprotect_keys}]

### Получить данные о типе дисконтной карты [GET]
Получение данных о типе дисконтной карты

+ Parameters
    + id_dcard_type (integer, required) - Код типа дисконтной карты

+ Response 200 (application/json)

    + Attributes (DiscountCardTypesStructure) 

### Изменить данные о типе дисконтной карты [PUT]
Изменение данных о типе дисконтной карты по коду

+ Parameters

    + id_dcard_type (integer, required) - Код типа дисконтной карты
    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)

    + Attributes (DiscountCardTypesStructure) 
            
+ Response 200 (application/json)

    + Attributes (DiscountCardTypesStructure) 

### Деактивировать данные о типе дисконтной карты [DELETE]
Деактивация данных о типе дисконтной карты

+ Parameters

    + id_dcard_type (integer, required) - Код типа дисконтной карты

+ Response 204


#Group Списки товаров

## Список списков товаров [/api/goodsLists{?active,order,filters,ids_list,offset,limit,unprotect_keys}]

### Получить список списков товаров [GET]
Получение списка списков товаров.

+ Parameters

    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + order (string, optional) - Список полей сортировки через запятую без пробелов      
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + offset (integer, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (integer, optional) - Возвращать указанное количество записей

+ Response 200 (application/json)

    + Attributes (array[DiscountCardTypesStructure])   

### Добавить список товаров [POST]
Добавление списка товаров.  
- Атрибут `id_goods_list` в JSON-е запроса игнорируется, если не указан параметр `unprotect_keys=true`.

+ Parameters

    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)

    + Attributes (GoodsListsStructure)   
                
+ Response 201 (application/json)

    + Headers

            Location: /api/goodsLists/1

    + Attributes (GoodsListsStructure) 
   

    
## Количество списков товаров [/api/goodsLists/count{?filters,ids_list,active}]

### Получить количество списков товаров  [GET]
Возвращает количество записей    

+ Parameters

    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + active (string, optional) - Если параметр равен "true", то учитываются только активные записи.

+ Response 200 (application/json)

    + Attributes (CountStructure)      
            

## Список товаров  [/api/goodsLists/{id_goods_list}/{?unprotect_keys}]

### Получить данные о списке товаров [GET]
Получение данных о типе дисконтной карты

+ Parameters
    + id_goods_list (integer, required) - Код типа дисконтной карты

+ Response 200 (application/json)

    + Attributes (GoodsListsStructure) 

### Изменить данные о списке товаров [PUT]
Изменение данных о списке товаров по коду

+ Parameters

    + id_goods_list (integer, required) - Код списка товаров
    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)

    + Attributes (GoodsListsStructure) 
            
+ Response 200 (application/json)

    + Attributes (GoodsListsStructure) 

### Деактивировать данные о списке товаров [DELETE]
Деактивация данных о списке товаров

+ Parameters

    + id_goods_list (integer, required) - Код списка товаров
+ Response 204


#Group Группы торговых точек

## Список групп торговых точек [/api/groupOutlets{?active,with,order,filters,ids_list,offset,limit,unprotect_keys}]

### Получить список групп торговых точек [GET]

+ Parameters

    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: owner, child, outlets  
    + order (string, optional) - Список полей сортировки через запятую без пробелов      
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + offset (integer, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (integer, optional) - Возвращать указанное количество записей

+ Response 200 (application/json)

    + Attributes (array[GroupOutletsStructure])   

### Добавить группу торговых точек [POST]
  
- Атрибут `id_group_outlet` в JSON-е запроса игнорируется, если не указан параметр `unprotect_keys=true`.

+ Parameters

    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)

    + Attributes (GroupOutletsStructure)   
                
+ Response 201 (application/json)

    + Headers

            Location: /api/groupOutlets/1

    + Attributes (GroupOutletsStructure) 
   

    
## Количество групп торговых точек [/api/groupOutlets/count{?filters,ids_list,active}]

### Получить количество групп торговых точек  [GET]

+ Parameters

    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + active (string, optional) - Если параметр равен "true", то учитываются только активные записи.

+ Response 200 (application/json)

    + Attributes (CountStructure)      
            

## Группа торговых точек  [/api/groupOutlets/{id_group_outlet}/{?unprotect_keys,with}]

### Получить данные о группе торговых точек [GET]

+ Parameters
    + id_group_outlet (integer, required) - Код группы торговых точек
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: owner, child, outlets  

+ Response 200 (application/json)

    + Attributes (GroupOutletsStructure) 

### Изменить данные о группе торговых точек [PUT]

+ Parameters

    + id_group_outlet (integer, required) - Код группы торговых точек
    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)

    + Attributes (GroupOutletsStructure) 
            
+ Response 200 (application/json)

    + Attributes (GroupOutletsStructure) 

### Деактивировать данные о группе торговых точек [DELETE]

+ Parameters

    + id_group_outlet (integer, required) - Код группы торговых точек
+ Response 204


#Group Торговые точки

## Список торговых точек [/api/outlets{?active,with,order,filters,ids_list,offset,limit,unprotect_keys}]

### Получить список торговых точек [GET]

+ Parameters

    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: priceLevel, workplace, groupOutlet, employees  
    + order (string, optional) - Список полей сортировки через запятую без пробелов      
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + offset (integer, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (integer, optional) - Возвращать указанное количество записей

+ Response 200 (application/json)

    + Attributes (array[OutletsStructure])   

### Добавить торговую точку [POST]
  
- Атрибут `id_outlet` в JSON-е запроса игнорируется, если не указан параметр `unprotect_keys=true`.

+ Parameters

    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)

    + Attributes (OutletsStructure)   
                
+ Response 201 (application/json)

    + Headers

            Location: /api/outlets/1

    + Attributes (GroupOutletsStructure) 
   

    
## Количество торговых точек [/api/outlets/count{?filters,ids_list,active}]

### Получить количество торговых точек  [GET]

+ Parameters

    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + active (string, optional) - Если параметр равен "true", то учитываются только активные записи.

+ Response 200 (application/json)

    + Attributes (CountStructure)      
            

## Торговая точка  [/api/outlets/{id_outlet}/{?unprotect_keys,with}]

### Получить данные о торговой точке [GET]

+ Parameters
    + id_outlet (integer, required) - Код торговой точки
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: priceLevel, workplace, groupOutlet, employees  

+ Response 200 (application/json)

    + Attributes (OutletsStructure) 

### Изменить данные о торговой точке [PUT]

+ Parameters

    + id_outlet (integer, required) - Код торговой точки
    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)

    + Attributes (OutletsStructure) 
            
+ Response 200 (application/json)

    + Attributes (OutletsStructure) 

### Деактивировать данные о торговой точке [DELETE]

+ Parameters

    + id_outlet (integer, required) - Код торговой точки
+ Response 204



#Group Рабочие места

## Список рабочих мест [/api/workplaces{?active,with,order,filters,ids_list,offset,limit,unprotect_keys}]

### Получить список рабочих мест [GET]

+ Parameters

    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: outlet  
    + order (string, optional) - Список полей сортировки через запятую без пробелов      
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + offset (integer, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (integer, optional) - Возвращать указанное количество записей

+ Response 200 (application/json)

    + Attributes (array[WorkplacesStructure])   

### Добавить рабочее место [POST]
  
- Атрибут `id_workplace` в JSON-е запроса игнорируется, если не указан параметр `unprotect_keys=true`.

+ Parameters

    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)

    + Attributes (WorkplacesStructure)   
                
+ Response 201 (application/json)

    + Headers

            Location: /api/workplaces/1

    + Attributes (WorkplacesStructure) 
   

## Количество  рабочих мест [/api/workplaces/count{?filters,ids_list,active}]

### Получить количество  рабочих мест  [GET]

+ Parameters

    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + active (string, optional) - Если параметр равен "true", то учитываются только активные записи.

+ Response 200 (application/json)

    + Attributes (CountStructure)      
            

## Рабочее место  [/api/workplaces/{id_outlet}/{?unprotect_keys,with}]

### Получить данные о рабочем месте [GET]

+ Parameters
    + id_outlet (integer, required) - Код рабочего места
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: outlet  

+ Response 200 (application/json)

    + Attributes (WorkplacesStructure) 

### Изменить данные о рабочем месте [PUT]

+ Parameters

    + id_outlet (integer, required) - Код рабочего места
    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)

    + Attributes (WorkplacesStructure) 
            
+ Response 200 (application/json)

    + Attributes (WorkplacesStructure) 

### Деактивировать данные о рабочем месте [DELETE]

+ Parameters

    + id_outlet (integer, required) - Код рабочего места
+ Response 204



#Group Программы лояльности

## Список програм лояльности [/api/loyaltyPrograms{?active,order,filters,ids_list,offset,limit,unprotect_keys}]

### Получить список програм лояльности [GET]

+ Parameters

    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + order (string, optional) - Список полей сортировки через запятую без пробелов      
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + offset (integer, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (integer, optional) - Возвращать указанное количество записей

+ Response 200 (application/json)

    + Attributes (array[LoyaltyProgramsStructure])   

### Добавить программу лояльности [POST]
  
- Атрибут `id_program` в JSON-е запроса игнорируется, если не указан параметр `unprotect_keys=true`.

+ Parameters

    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)

    + Attributes (LoyaltyProgramsStructure)   
                
+ Response 201 (application/json)

    + Headers

            Location: /api/loyaltyPrograms/1

    + Attributes (LoyaltyProgramsStructure) 
   

## Количество  программ лояльности [/api/loyaltyPrograms/count{?filters,ids_list,active}]

### Получить количество программ лояльности  [GET]

+ Parameters
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + active (string, optional) - Если параметр равен "true", то учитываются только активные записи.

+ Response 200 (application/json)
    + Attributes (CountStructure)      

## Текущая программа лояльности  [/api/loyaltyPrograms/current]

### Получить данные о текущей программе лояльности [GET]
Получение программы лояльности, в которой поле state = 1 (текущая программа)

+ Response 200 (application/json)
    + Attributes (LoyaltyProgramsStructure)     
            

## Программа лояльности  [/api/loyaltyPrograms/{id_program}/{?unprotect_keys,with}]

### Получить данные о программе лояльности [GET]

+ Parameters
    + id_program (integer, required) - Код программы лояльности

+ Response 200 (application/json)
    + Attributes (LoyaltyProgramsStructure) 

### Изменить данные о программе лояльности [PUT]

+ Parameters
    + id_program (integer, required) - Код программы лояльности
    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)
    + Attributes (LoyaltyProgramsStructure) 
            
+ Response 200 (application/json)
    + Attributes (LoyaltyProgramsStructure) 

### Деактивировать данные о программе лояльности [DELETE]

+ Parameters
    + id_program (integer, required) - Код программы лояльности
    
+ Response 204



#Group Рекламные сообщения для чеков

## Список рекламных сообщений для чеков [/api/AdsMessages{?active,order,filters,with,ids_list,offset,limit,unprotect_keys}]

### Получить список рекламных сообщений для чеков [GET]

+ Parameters

    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + order (string, optional) - Список полей сортировки через запятую без пробелов      
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: workplace  
    + offset (integer, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (integer, optional) - Возвращать указанное количество записей

+ Response 200 (application/json)

    + Attributes (array[AdsMessagesStructure])   

### Добавить рекламное сообщение для чеков [POST]
  
- Атрибут `unprotect_keys=true` и значение `id_ads` в теле запроса указывать обязательно. Значение ключа `id_ads` автоматически не генерируется при создании записи.

+ Parameters

    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)

    + Attributes (AdsMessagesStructure)   
                
+ Response 201 (application/json)

    + Headers

            Location: /api/AdsMessages/1

    + Attributes (AdsMessagesStructure) 
   

## Количество рекламных сообщений для чеков [/api/AdsMessages/count{?filters,ids_list,active}]

### Получить количество рекламных сообщений для чеков  [GET]

+ Parameters
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + active (string, optional) - Если параметр равен "true", то учитываются только активные записи.

+ Response 200 (application/json)
    + Attributes (CountStructure)      
            

## Рекламное сообщение для чеков  [/api/AdsMessages/{id_ads}/{?unprotect_keys,with}]

### Получить данные о рекламном сообщении [GET]

+ Parameters
    + id_ads (integer, required) - Идентификатор рекламного сообщения
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: workplace  
+ Response 200 (application/json)
    + Attributes (AdsMessagesStructure) 

### Изменить данные о рекламном сообщении [PUT]

+ Parameters
    + id_ads (integer, required) - Идентификатор рекламного сообщения
    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)
    + Attributes (AdsMessagesStructure) 
            
+ Response 200 (application/json)
    + Attributes (AdsMessagesStructure) 

### Деактивировать данные о рекламном сообщении [DELETE]

+ Parameters
    + id_ads (integer, required) - Идентификатор рекламного сообщения
    
+ Response 204


#Group Статьи движения денег

## Список статей движения денег [/api/cashFlows{?active,order,filters,ids_list,offset,limit,unprotect_keys}]

### Получить список статей движения денег [GET]

+ Parameters

    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + order (string, optional) - Список полей сортировки через запятую без пробелов      
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + offset (number, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (number, optional) - Возвращать указанное количество записей

+ Response 200 (application/json)

    + Attributes (array[CashFlowStructure])   

### Добавить статью движения денег [POST]
  
- Атрибут `unprotect_keys=true` и значение `id_article` в теле запроса указывать обязательно. Значение ключа `id_article` автоматически не генерируется при создании записи.

+ Parameters

    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)

    + Attributes (CashFlowStructure)   
                
+ Response 201 (application/json)

    + Headers

            Location: /api/cashFlows/1

    + Attributes (CashFlowStructure) 
   

## Количество статей движения денег [/api/cashFlows/count{?filters,ids_list,active}]

### Получить количество статей движения денег  [GET]

+ Parameters
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + active (string, optional) - Если параметр равен "true", то учитываются только активные записи.

+ Response 200 (application/json)
    + Attributes (CountStructure)      
            

## Статья движения денег  [/api/cashFlows/{id_article}/{?unprotect_keys}]

### Получить данные о статье движения денег [GET]

+ Parameters
    + id_article (number, required) - Идентификатор статьи движения денег
+ Response 200 (application/json)
    + Attributes (CashFlowStructure) 

### Изменить данные о статье движения денег [PUT]

+ Parameters
    + id_article (number, required) - Идентификатор валюты
    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)
    + Attributes (CashFlowStructure) 
            
+ Response 200 (application/json)
    + Attributes (CashFlowStructure) 

### Деактивировать данные о статье движения денег [DELETE]

+ Parameters
    + id_article (number, required) - Идентификатор валюты
    
+ Response 204

#Group Валюты

## Список валют [/api/currencies/{?active,order,filters,with,ids_list,offset,limit,unprotect_keys}]

### Получить список валют [GET]

+ Parameters

    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + order (string, optional) - Список полей сортировки через запятую без пробелов      
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: currenciesExchange,currentCurrencyExchange  
    + offset (number, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (number, optional) - Возвращать указанное количество записей

+ Response 200 (application/json)

    + Attributes (array[CurrencyStructure])   

### Добавить валюту [POST]
  
- Атрибут `unprotect_keys=true` и значение `id_currency` в теле запроса указывать обязательно. Значение ключа `id_currency` автоматически не генерируется при создании записи.

+ Parameters

    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)

    + Attributes (CurrencyStructure)   
                
+ Response 201 (application/json)

    + Headers

            Location: /api/currencies/1

    + Attributes (CurrencyStructure) 
   

## Количество валют [/api/currencies/count{?filters,ids_list,active}]

### Получить количество валют  [GET]

+ Parameters
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + active (string, optional) - Если параметр равен "true", то учитываются только активные записи.

+ Response 200 (application/json)
    + Attributes (CountStructure)      
            

## Валюта  [/api/currencies/{id_currency}/{?unprotect_keys,with}]

### Получить данные о валюте [GET]

+ Parameters
    + id_currency (number, required) - Идентификатор валюты
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: currenciesExchange,currentCurrencyExchange   
+ Response 200 (application/json)
    + Attributes (CurrencyStructure) 

### Изменить данные о валюте [PUT]

+ Parameters
    + id_currency (number, required) - Идентификатор валюты
    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)
    + Attributes (CurrencyStructure) 
            
+ Response 200 (application/json)
    + Attributes (CurrencyStructure) 

### Деактивировать данные о валюте [DELETE]

+ Parameters
    + id_currency (number, required) - Идентификатор валюты
+ Response 204


#Group Курсы валют

 История изменения курсов валют.

## Список курсов валют [/api/currenciesExchanges{?active,id_currency,from,to,order,filters,with,ids_list,offset,limit,unprotect_keys}]

### Получить список курсов валют [GET]

+ Parameters

    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + id_currency (number, required) - Идентификатор валюты
    + from (string, optional) - Начальная дата, с которой возвращать результат
    + to (string, optional) - Конечная дата, по которую возвращать результат
    + order (string, optional) - Список полей сортировки через запятую без пробелов      
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: currency  
    + offset (number, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (number, optional) - Возвращать указанное количество записей

+ Response 200 (application/json)

    + Attributes (array[CurrencyExchangeStructure])   

### Добавить курс валюты [POST]
  
+ Parameters

    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)

    + Attributes (CurrencyExchangeStructure)   
                
+ Response 201 (application/json)

    + Headers

            Location: /api/currenciesExchanges/1

    + Attributes (CurrencyExchangeStructure) 
   

## Количество курсов валют [/api/currenciesExchanges/count{?filters,ids_list,active}]

### Получить количество курсов валют  [GET]

+ Parameters
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + active (string, optional) - Если параметр равен "true", то учитываются только активные записи.

+ Response 200 (application/json)
    + Attributes (CountStructure)      
            

## Курс валюты  [/api/currenciesExchanges/{id_exchange}/{?unprotect_keys,with}]

### Получить данные о курсе валюты [GET]

+ Parameters
    + id_exchange (number, required) - Идентификатор валюты
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: currency  
+ Response 200 (application/json)
    + Attributes (CurrencyExchangeStructure)

#Group Сотрудники
Работа с сотрудниками организации.

*В операциях получения данных поле `password` опускается*

## Список сотрудников [/api/employees/{?active,order,filters,ids_list,with,offset,limit,unprotect_keys}]

### Получить список сотрудников [GET]
+ Parameters
    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + order (string, optional) - Список полей сортировки через запятую без пробелов
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: outlet,profile 
    + offset (number, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (number, optional) - Возвращать указанное количество записей
+ Response 200 (application/json)
    + Attributes (array[EmployeesStructure])

### Добавить сотрудника [POST]
+ Parameters
    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются
+ Request (application/json)
    + Attributes (EmployeesStructure)
+ Response 201 (application/json)
            + Headers
                Location: /api/employees/1
    + Attributes (EmployeesStructure) 
    
## Количество сотрудников [/api/employees/count/{?filters,ids_list,active}]    
    
### Получить количество сотрудников  [GET]
+ Parameters
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + active (string, optional) - Если параметр равен "true", то учитываются только активные записи.
+ Response 200 (application/json)
    + Attributes (CountStructure)

## Сотрудник  [/api/employees/{id_employee}/{?unprotect_keys,with}]

### Получить данные о сотруднике [GET]
+ Parameters
    + id_employee (number, required) - Идентификатор сотрудника
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи:   
+ Response 200 (application/json)
    + Attributes (EmployeesStructure)

### Изменить данные о сотруднике [PUT]

+ Parameters
    + id_employee (number, required) - Идентификатор сотрудника
    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются
+ Request (application/json)
    + Attributes (EmployeesStructure) 
+ Response 200 (application/json)
    + Attributes (EmployeesStructure) 

### Деактивировать данные о сотруднике [DELETE]

+ Parameters
    + id_employee (number, required) - Идентификатор сотрудника
+ Response 204

#Group Профили сотрудников
Работа с профилями сотрудников организации.

## Список профилей сотрудников [/api/profiles/{?active,order,filters,ids_list,with,offset,limit,unprotect_keys}]

### Получить список профилей сотрудников [GET]
+ Parameters
    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + order (string, optional) - Список полей сортировки через запятую без пробелов
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: employees 
    + offset (number, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (number, optional) - Возвращать указанное количество записей
+ Response 200 (application/json)
    + Attributes (array[ProfileStructure])

### Добавить профиль сотрудника [POST]
При добавлении профиля, если значение поля `id_permissions_list` не указано, оно будет установлено равным `id_profile`. 
+ Parameters
    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются
+ Request (application/json)
    + Attributes (ProfileStructure)
+ Response 201 (application/json)
            + Headers
                Location: /api/profiles/1
    + Attributes (ProfileStructure)
    
## Количество профилей сотрудников [/api/profiles/count/{?filters,ids_list,active}] 
 
### Получить количество профилей сотрудников  [GET]
+ Parameters
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + active (string, optional) - Если параметр равен "true", то учитываются только активные записи.
+ Response 200 (application/json)
    + Attributes (CountStructure)

## Профиль сотрудника  [/api/profiles/{id_profile}/{?unprotect_keys,with}]

### Получить профиль сотрудника  [GET]
+ Parameters
    + id_profile (number, required) - Идентификатор профиля сотрудника
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: employees  
+ Response 200 (application/json)
    + Attributes (ProfileStructure)

### Изменить данные о профиле сотрудника [PUT]
+ Parameters
    + id_profile (number, required) - Идентификатор профиля сотрудника
    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются
+ Request (application/json)
    + Attributes (ProfileStructure) 
+ Response 200 (application/json)
    + Attributes (ProfileStructure) 

### Деактивировать данные о профиле сотрудника [DELETE]
+ Parameters
    + id_profile (number, required) - Идентификатор профиля сотрудника
+ Response 204    

#Group Списки разрешений
Работа со списками разрешений профилей сотрудников организации.
Есть возможность получить список установленных разрешений по идентификатору списка разрешений, устанавливать и удалять конкретные разрешения,
устанавливать разрешения списком при помощи одного запроса. Также можно получить список существующих типов разрешений.

## Список разрешений профилей сотрудников [/api/permissionsLists/{?id_permissions_list,order}]
Возвращает список разрешений для профиля сотрудника для конкретного идентификатора списка разрешений.
Без параметра `id_permissions_list` возвращает все записи.

### Получить список разрешений профилей сотрудников [GET]
+ Parameters
    + id_permissions_list (number, optional) - Идентификатор списка разрешений
    + order (string, optional) - Список полей сортировки через запятую без пробелов
    
+ Response 200 (application/json)
    + Attributes (array[PermissionsListStructure])

## Установка и удаление отдельных разрешений профиля сотрудников [/api/permissionsLists/{id_permissions_list}/{id_permission}]

### Установить разрешение профиля сотрудника [POST]
+ Parameters
    + id_permissions_list (number, required) - Идентификатор списка разрешений
    + id_permission (number, required) - Идентификатор разрешения
+ Response 204

### Убрать разрешение профиля сотрудника [DELETE]
+ Parameters
    + id_permissions_list (number, required) - Идентификатор списка разрешений
    + id_permission (number, required) - Идентификатор разрешения
+ Response 204

## Установка набора разрешений профиля сотрудников [/api/permissionsLists/{id_permissions_list}/{?permissions}]
### Установить набор разрешений профиля сотрудников [PUT]
Имеющиеся разрешения будут сброшены и установлены те, что переданы в параметре `permissions`. 
Пользователю будет отправлен JSON с установленными разрешениями.
+ Parameters
    + id_permissions_list (number, required) - Идентификатор списка разрешений
    + permissions (string, required) - Список идентификаторов устанавливаемых разрешений в виде строки чисел через запятую без пробела
+ Response 200 (application/json)
    + Attributes (array[PermissionsListStructure])

## Список разрешений [/api/permissions/{?order,with}]

### Получить список типов разрешений профилей сотрудников [GET]
Получение списка возможных типов разрешений с идентификаторами и названиями
+ Parameters
    + order (string, optional) - Список полей сортировки через запятую без пробелов
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: permissionsLists  
+ Response 200 (application/json)
    + Attributes (array[PermissionStructure])

## Разрешение [/api/permissions/{id_permission}/{?with}]

### Получить тип разрешения по идентификатору  [GET]
+ Parameters
    + id_permission (number, required) - Идентификатор разрешения
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: permissionsLists  
+ Response 200 (application/json)
    + Attributes (ProfileStructure)


#Group Настройки ККМ рабочих мест торговой точки
Настройки шапки и подвала чека

## Список настроек ККМ и добавление записи [/api/tellerSettings{?active,order,filters,with,ids_list,offset,limit,unprotect_keys}]

### Получить список настроек [GET]
+ Parameters
    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + order (string, optional) - Список полей сортировки через запятую без пробелов      
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: outlet 
    + offset (integer, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (integer, optional) - Возвращать указанное количество записей
+ Response 200 (application/json)
    + Attributes (array[TellerSettingsStructure])   

### Добавить настройку [POST]
+ Parameters
    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются
+ Request (application/json)
    + Attributes (TellerSettingsStructure)
+ Response 201 (application/json)
        + Headers
            Location: /api/TellerSettings/1
    + Attributes (TellerSettingsStructure)

## Количество настроек ККМ [/api/tellerSettings/count{?filters,ids_list,active}]

### Получить количество настроек  [GET]
+ Parameters
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + active (string, optional) - Если параметр равен "true", то учитываются только активные записи.
+ Response 200 (application/json)
    + Attributes (CountStructure)     

## Настройки ККМ  [/api/tellerSettings/{id_setting}/{?unprotect_keys,with}]

### Получить настройку [GET]

+ Parameters
    + id_setting (integer, required) - Идентификатор настройки
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: workplace  
+ Response 200 (application/json)
    + Attributes (TellerSettingsStructure) 

### Изменить настройку [PUT]

+ Parameters
    + id_setting (integer, required) - Идентификатор настройки
    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются
+ Request (application/json)
    + Attributes (TellerSettingsStructure) 
+ Response 200 (application/json)
    + Attributes (TellerSettingsStructure) 

### Деактивировать настройку [DELETE]

+ Parameters
    + id_setting (integer, required) - Идентификатор настройки
+ Response 204


#Group Разрешенные товары для рабочих мест
Cписок товаров, доступных на каждом рабочем месте

## Список доступных товаров [/api/goodsOnWorkplace/{?id_workplace,active,order,filters,with,ids_list,offset,limit,unprotect_keys}]
Возвращает список доступных товаров для рабочего места.
Без параметра `id_workplace` возвращает все записи.

### Получить список доступных товаров [GET]
+ Parameters
    + id_workplace (number, optional) - Идентификатор рабочего места
    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + order (string, optional) - Список полей сортировки через запятую без пробелов      
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи:
    + offset (integer, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (integer, optional) - Возвращать указанное количество записей
    
+ Response 200 (application/json)
    + Attributes (array[GoodsOnWorkplaceStructure])



## Количество доступных товаров [/api/goodsOnWorkplace/count/{?id_workplace,filters,active}] 
 
### Получить количество доступных товаров  [GET]
+ Parameters
    + id_workplace (number, optional) - Идентификатор рабочего места
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + active (string, optional) - Если параметр равен "true", то учитываются только активные записи.
+ Response 200 (application/json)
    + Attributes (CountStructure)

## Доступные на рабочем месте товары  [/api/goodsOnWorkplace/{id_workplace}/{id_goods}]

### Получить товар [GET]

+ Parameters
    + id_workplace (number,required) - Идентификатор рабочего места
    + id_goods (number, required) - Идентификатор товара    
+ Response 200 (application/json)
    + Attributes (GoodsOnWorkplaceStructure) 

### Добавить товар в список доступных товаров [POST]
+ Request (application/json)
    + Attributes (GoodsOnWorkplaceStructure)
+ Response 201 (application/json)
            + Headers
                Location: /api/goodsOnWorkplace/1/1
    + Attributes (GoodsOnWorkplaceStructure)    

### Изменить товар [PUT]

+ Parameters
    + id_workplace (number, required) - Идентификатор рабочего места
    + id_goods (number, required) - Идентификатор товара    
+ Request (application/json)
    + Attributes (GoodsOnWorkplaceStructure) 
+ Response 200 (application/json)
    + Attributes (GoodsOnWorkplaceStructure) 

### Деактивировать товар [DELETE]

+ Parameters
    + id_workplace (number, required) - Идентификатор рабочего места
    + id_goods (number, required) - Идентификатор товара 
+ Response 204

## Доступные на рабочем месте товары - массовые операции  [/api/goodsOnWorkplace/{id_workplace}/{?id_group}]
Добавление/деактивация товаров, входящих в указанную в параметре `id_group` группу товаров или в ее дочерние группы.
При добавлении учитываются только активные товары.
### Добавить товары указанной группы товаров в список доступных товаров [POST]
+ Parameters
    + id_workplace (number, required) - Идентификатор рабочего места
    + id_group (number, required) - Идентификатор группы товаров 
+ Response 204

### Убрать товары указанной группы товаров из списка доступных товаров [DELETE]
+ Parameters
    + id_workplace (number, required) - Идентификатор рабочего места
    + id_group (number, required) - Идентификатор группы товаров 
+ Response 204

#Group PLU для весов с печатью этикеток
Перечень товаров для программирования весов с печатью штрих-кодов.

## Список PLU [/api/plu/{?active,order,filters,ids_list,with,offset,limit}]

### Получить список кодов PLU [GET]
+ Parameters
    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + order (string, optional) - Список полей сортировки через запятую без пробелов
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: goods 
    + offset (number, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (number, optional) - Возвращать указанное количество записей
+ Response 200 (application/json)
    + Attributes (array[PluStructure])    

### Добавить код PLU [POST]
Обязательно нужно указывать `id_plu` в данных. Автоматически код не создается. PLU для весов с печатью этикеток
+ Request (application/json)
    + Attributes (PluStructure)
+ Response 201 (application/json)
            + Headers
                Location: /api/plu/1000
    + Attributes (PluStructure)    
    
## Количество кодов PLU [/api/plu/count/{?filters,ids_list,active}] 
 
### Получить количество кодов PLU  [GET]
+ Parameters
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + active (string, optional) - Если параметр равен "true", то учитываются только активные записи.
+ Response 200 (application/json)
    + Attributes (CountStructure)

## Код PLU  [/api/plu/{id_plu}/{?with}]

### Получить код PLU  [GET]
+ Parameters
    + id_plu (number, required) - Код PLU
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: goods  
+ Response 200 (application/json)
    + Attributes (PluStructure)

### Изменить код PLU [PUT]
+ Parameters
    + id_plu (number, required) - Код PLU
+ Request (application/json)
    + Attributes (PluStructure) 
+ Response 200 (application/json)
    + Attributes (PluStructure) 

### Деактивировать код PLU [DELETE]
+ Parameters
    + id_plu (number, required) - Код PLU
+ Response 204    

#Group Дополнительные тексты товара
Используется для печати связанного с товаром текста на весах с чекопечатью, на принтерах этикеток.

## Список дополнительных текстов товара [/api/additionalTexts/{?unprotect_keys,active,order,filters,ids_list,offset,limit}]

### Получить список дополнительных текстов товара [GET]
+ Parameters
    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + order (string, optional) - Список полей сортировки через запятую без пробелов
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + offset (number, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (number, optional) - Возвращать указанное количество записей
+ Response 200 (application/json)
    + Attributes (array[AdditionalTextStructure])    

### Добавить дополнительный текст товара [POST]
+ Request (application/json)
    + Attributes (AdditionalTextStructure)
+ Parameters
    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются    
+ Response 201 (application/json)
            + Headers
                Location: /api/additionalTexts/1
    + Attributes (AdditionalTextStructure)    
    
## Количество дополнительных текстов товара [/api/additionalTexts/count/{?filters,ids_list,active}] 
 
### Получить количество дополнительных текстов товара  [GET]
+ Parameters
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + active (string, optional) - Если параметр равен "true", то учитываются только активные записи.
+ Response 200 (application/json)
    + Attributes (CountStructure)

## Дополнительный текст товара  [/api/additionalTexts/{id_text}]

### Получить дополнительный текст товара  [GET]
+ Parameters
    + id_text (number, required) - Идентификатор дополнительного текста товара
+ Response 200 (application/json)
    + Attributes (AdditionalTextStructure)

### Изменить дополнительный текст товара [PUT]
+ Parameters
    + id_text (number, required) - Идентификатор дополнительного текста товара
+ Request (application/json)
    + Attributes (AdditionalTextStructure) 
+ Response 200 (application/json)
    + Attributes (AdditionalTextStructure) 

### Деактивировать дополнительный текст товара [DELETE]
+ Parameters
    + id_text (number, required) - Идентификатор дополнительного текста товара
+ Response 204   

#Group Группы модификаторов

## Список групп модификаторов [/api/modificatorGroups/{?unprotect_keys,active,order,filters,ids_list,offset,limit}]
Группы модификаторов для Resto

### Получить список групп модификаторов [GET]
+ Parameters
    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + order (string, optional) - Список полей сортировки через запятую без пробелов
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + offset (number, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (number, optional) - Возвращать указанное количество записей
+ Response 200 (application/json)
    + Attributes (array[ModificatorGroupsStructure])    

### Добавить группу модификаторов [POST]
+ Request (application/json)
    + Attributes (ModificatorGroupsStructure)
+ Parameters
    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются    
+ Response 201 (application/json)
            + Headers
                Location: /api/modificatorGroups/1
    + Attributes (ModificatorGroupsStructure)    
    
## Количество групп модификаторов [/api/modificatorGroups/count/{?filters,ids_list,active}] 
 
### Получить количество групп модификаторов  [GET]
+ Parameters
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + active (string, optional) - Если параметр равен "true", то учитываются только активные записи.
+ Response 200 (application/json)
    + Attributes (CountStructure)

## Группа модификаторов  [/api/modificatorGroups/{id_modificator_group}]

### Получить группу модификаторов  [GET]
+ Parameters
    + id_modificator_group (number, required) - Идентификатор группы модификаторов
+ Response 200 (application/json)
    + Attributes (ModificatorGroupsStructure)

### Изменить группу модификаторов [PUT]
+ Parameters
    + id_modificator_group (number, required) - Идентификатор группы модификаторов
+ Request (application/json)
    + Attributes (ModificatorGroupsStructure) 
+ Response 200 (application/json)
    + Attributes (ModificatorGroupsStructure) 

### Деактивировать группу модификаторов [DELETE]
+ Parameters
    + id_modificator_group (number, required) - Идентификатор группы модификаторов
+ Response 204  

#Group Префиксы прямых пополнений
Связь между префиксом телефонного номера и кодом товара "Прямое пополнение".

## Список префиксов прямых пополнений [/api/mapPrefixToDirectPay/{?unprotect_keys,active,order,with,filters,ids_list,offset,limit}]

### Получить список префиксов прямых пополнений [GET]
+ Parameters
    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + order (string, optional) - Список полей сортировки через запятую без пробелов
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: goods 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + offset (number, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (number, optional) - Возвращать указанное количество записей
+ Response 200 (application/json)
    + Attributes (array[MapPrefixToDirectPayStructure])    

### Добавить префикс прямого пополнения [POST]
+ Request (application/json)
    + Attributes (MapPrefixToDirectPayStructure)
+ Parameters
    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются    
+ Response 201 (application/json)
            + Headers
                Location: /api/mapPrefixToDirectPay/1
    + Attributes (MapPrefixToDirectPayStructure)    
    
## Количество префиксов прямых пополнений [/api/mapPrefixToDirectPay/count/{?filters,ids_list,active}] 
 
### Получить количество префиксов прямых пополнений  [GET]
+ Parameters
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + active (string, optional) - Если параметр равен "true", то учитываются только активные записи.
+ Response 200 (application/json)
    + Attributes (CountStructure)

## Префикс прямого пополнения  [/api/mapPrefixToDirectPay/{prefix}/{?unprotect_keys}]

### Получить префикс прямого пополнения  [GET]
+ Parameters
    + prefix (string, required) - Префикс телефонного номера
+ Response 200 (application/json)
    + Attributes (MapPrefixToDirectPayStructure)

### Изменить префикс прямого пополнения [PUT]
+ Parameters
    + prefix (string, required) - Префикс телефонного номера
    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются   
+ Request (application/json)
    + Attributes (MapPrefixToDirectPayStructure) 
+ Response 200 (application/json)
    + Attributes (MapPrefixToDirectPayStructure) 

### Деактивировать префикс прямого пополнения [DELETE]
+ Parameters
    + prefix (string, required) - Префикс телефонного номера
+ Response 204

#Group Маски весовых штрих-кодов
Правила преобразования весовых штрих-кодов в идентификатор товара и вес товара.

## Список масок весовых штрих-кодов [/api/maskBarCodes/{?unprotect_keys,active,order,filters,ids_list,offset,limit}]

### Получить список масок весовых штрих-кодов [GET]
+ Parameters
    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + order (string, optional) - Список полей сортировки через запятую без пробелов
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + offset (number, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (number, optional) - Возвращать указанное количество записей
+ Response 200 (application/json)
    + Attributes (array[MaskBarCodeStructure])    

### Добавить маску весового штрих-кода [POST]
+ Request (application/json)
    + Attributes (MaskBarCodeStructure)
+ Parameters
    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются    
+ Response 201 (application/json)
            + Headers
                Location: /api/maskBarCodes/1
    + Attributes (MaskBarCodeStructure)    
    
## Количество масок весовых штрих-кодов [/api/maskBarCodes/count/{?filters,ids_list,active}] 
 
### Получить количество масок весовых штрих-кодов  [GET]
+ Parameters
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + active (string, optional) - Если параметр равен "true", то учитываются только активные записи.
+ Response 200 (application/json)
    + Attributes (CountStructure)

## Маска весового штрих-кода  [/api/maskBarCodes/{id_mask}/{?unprotect_keys}]

### Получить маску весового штрих-кода  [GET]
+ Parameters
    + id_mask (string, required) - Идентификатор маски штрих-кода
+ Response 200 (application/json)
    + Attributes (MaskBarCodeStructure)

### Изменить маску весового штрих-кода [PUT]
+ Parameters
    + id_mask (string, required) - Идентификатор маски штрих-кода
    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются   
+ Request (application/json)
    + Attributes (MaskBarCodeStructure) 
+ Response 200 (application/json)
    + Attributes (MaskBarCodeStructure) 

### Деактивировать маску весового штрих-кода [DELETE]
+ Parameters
    + id_mask (string, required) - Идентификатор маски штрих-кода
+ Response 204

#Group Шаблоны тестовых сообщений
Шаблоны для добавления в текстовые сообщения.

## Список шаблонов тестовых сообщений [/api/messageTexts/{?unprotect_keys,active,order,with,filters,ids_list,offset,limit}]

### Получить список шаблонов тестового сообщения [GET]
+ Parameters
    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + order (string, optional) - Список полей сортировки через запятую без пробелов
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: messageInbox 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + offset (number, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (number, optional) - Возвращать указанное количество записей
+ Response 200 (application/json)
    + Attributes (array[MessageTextStructure])    

### Добавить шаблон тестового сообщения [POST]
+ Request (application/json)
    + Attributes (MessageTextStructure)
+ Parameters
    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются    
+ Response 201 (application/json)
            + Headers
                Location: /api/messageTexts/1
    + Attributes (MessageTextStructure)    
    
## Количество шаблонов тестовых сообщений [/api/messageTexts/count/{?filters,ids_list,active}] 
 
### Получить количество шаблонов тестовых сообщений  [GET]
+ Parameters
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + active (string, optional) - Если параметр равен "true", то учитываются только активные записи.
+ Response 200 (application/json)
    + Attributes (CountStructure)

## Маска шаблона тестового сообщения  [/api/messageTexts/{id_message_text}/{?with,unprotect_keys}]

### Получить шаблон тестового сообщения  [GET]
+ Parameters
    + id_message_text (number, required) - Идентификатор текста сообщения
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: messageInbox 
+ Response 200 (application/json)
    + Attributes (MessageTextStructure)

### Изменить шаблон тестового сообщения [PUT]
+ Parameters
    + id_message_text (number, required) - Идентификатор текста сообщения
    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются   
+ Request (application/json)
    + Attributes (MessageTextStructure) 
+ Response 200 (application/json)
    + Attributes (MessageTextStructure) 

### Деактивировать шаблон тестового сообщения [DELETE]
+ Parameters
    + id_message_text (number, required) - Идентификатор текста сообщения
+ Response 204

#Group Системные команды

## Список системных команд [/api/commands/{?unprotect_keys,active,order,with,filters,ids_list,offset,limit}]

### Получить список системных команд [GET]
+ Parameters
    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + order (string, optional) - Список полей сортировки через запятую без пробелов
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: actions  
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + offset (number, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (number, optional) - Возвращать указанное количество записей
+ Response 200 (application/json)
    + Attributes (array[CommandStructure])    

### Добавить системную команду [POST]
+ Request (application/json)
    + Attributes (CommandStructure)
+ Response 201 (application/json)
            + Headers
                Location: /api/commands/1
    + Attributes (CommandStructure)    
    
## Список идентификаторов системного действия [/api/commands/actions]

### Получить список идентификаторов системного действия [GET]
+ Response 200 (application/json)
    + Attributes (array[CommandActionsStructure])  
    
## Количество системных команд [/api/commands/count/{?filters,ids_list,active}] 
 
### Получить количество системных команд  [GET]
+ Parameters
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + active (string, optional) - Если параметр равен "true", то учитываются только активные записи.
+ Response 200 (application/json)
    + Attributes (CountStructure)

## Системная команда  [/api/commands/{command}/{?unprotect_keys,with}]

### Получить системную команду  [GET]
+ Parameters
    + command (number, required) - Код или штрих-код, по которому будет выполнятся системное действие
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: actions  
+ Response 200 (application/json)
    + Attributes (CommandStructure)

### Изменить системную команду [PUT]
+ Parameters
    + command (number, required) - Код или штрих-код, по которому будет выполнятся системное действие
    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях редактирования значения ключевого поля не игнорируются   
+ Request (application/json)
    + Attributes (CommandStructure) 
+ Response 200 (application/json)
    + Attributes (CommandStructure) 

### Деактивировать системную команду [DELETE]
+ Parameters
    + command (number, required) - Код или штрих-код, по которому будет выполнятся системное действие
+ Response 204


#Group Роли пользователей Скаута
Роли со значением `default_role` = 1 являтся предварительно созданными и не могут изменяться. Их можно только просматривать.
При создании ролей атрибут `default_role` игнорируется: он всегда будет установлен в 0.

## Список ролей пользователей [/api/roles/{?with,unprotect_keys,order,filters,ids_list,offset,limit}]

### Получить список ролей [GET]
+ Parameters
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: roleActions
    + order (string, optional) - Список полей сортировки через запятую без пробелов
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + offset (number, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (number, optional) - Возвращать указанное количество записей
+ Response 200 (application/json)
    + Attributes (array[RoleStructure])    

### Добавить роль [POST]
+ Request (application/json)
    + Attributes (RoleStructure)
+ Parameters
    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются    
+ Response 201 (application/json)
            + Headers
                Location: /api/roles/1
    + Attributes (RoleStructure)    
    
## Количество ролей пользователей [/api/roles/count/{?filters,ids_list}] 
 
### Получить количество ролей  [GET]
+ Parameters
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
+ Response 200 (application/json)
    + Attributes (CountStructure)

## Роль пользователя  [/api/roles/{id_role}/{?with}]

### Получить роль  [GET]
+ Parameters
    + id_role (number, required) - Идентификатор роли
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: roleActions
+ Response 200 (application/json)
    + Attributes (RoleStructure)

### Изменить роль [PUT]
Роль со значением `default_role` = 1 можно только просматривать.
+ Parameters
    + id_role (number, required) - Идентификатор роли
+ Request (application/json)
    + Attributes (RoleStructure) 
+ Response 200 (application/json)
    + Attributes (RoleStructure) 

### Удалить роль [DELETE]
Роль не деактивируется, а полностью удаляется! Если существуют пользователи с такой ролью, удаление не будет произведено и будет возвращена ошибка 403.
+ Parameters
    + id_role (number, required) - Идентификатор роли
+ Response 204

# Group Доступы к ресурсам согласно ролей
- Для предустановленных ролей (ролей по умолчанию) нет возможности изменять доступы.
- Для роли администратора всегда открыты все доступы


## Доступы к ресурсам в виде списка [/api/roleActions/list/{id_role}/{?root}]

### Получить список доступов [GET]
+ Parameters
    + id_role (number,optional) - Идентификатор роли. Если указан, будут отображены доступы только для этой роли
    + root (number,optional) - Идентификатор ресурса. Если указан, будут отображены данные для этого и его дочерних ресурсов.
+ Response 200 (application/json)
    + Attributes (array[RoleActionStructure])

## Доступы к ресурсам в виде дерева [/api/roleActions/tree/{id_role}/{?root}]
### Получить список доступов [GET]
+ Parameters
    + id_role (number,optional) - Идентификатор роли.
    + root (number,optional) - Идентификатор ресурса. Если указан, будут отображены данные для этого и его дочерних ресурсов.
+ Response 200 (application/json)
    + Attributes (array[RoleActionTreeStructure])

## Доступ к ресурсу [/api/roleActions/{id_role}/{id_resourse}/{?readonly,children}]
### Получить данные о доступе к ресурсу [GET]
+ Parameters
    + id_role (number,required) - Идентификатор роли.
    + id_resourse (number,required) - Идентификатор ресурса.
+ Response 200 (application/json)
    + Attributes (RoleActionStructure)

### Разрешить доступ к ресурсу [POST]
+ Parameters
    + id_role (number,required) - Идентификатор роли.
    + id_resourse (number,required) - Идентификатор ресурса.
    + readonly (boolean,optional) - Доступ только для чтения. Если параметр не указан, устанавливается полный доступ.    
    + children (boolean,optional) - Если параметр установлен а true, доступы будут установлены также к дочерним ресурсям указанного ресурса
+ Response 204

### Запретить доступ к ресурсу [DELETE]
+ Parameters
    + id_role (number,required) - Идентификатор роли. 
    + id_resourse (number,required) - Идентификатор ресурса.
    + children (boolean,optional) - Если параметр установлен а true, доступы будут запрещены также к дочерним ресурсям указанного ресурса
+ Response 204

# Group Доступные торговые объекты
- Управление доступами к торговым объектам для различных пользователей. Эти доступы учитываются при формировании отчетов и т.п
- Предполагается, что доступ к родительскому торговому объекту установлен в том случае, если имеют доступ все его дочерние объекты,
- Идентификатор объекта `id_user_object` уникально обозначает торговый объект. 
  Формируется из идентификатора типа торгового объекта (1000 - группа торговых точек, 2000 - торговая точка, 3000 - рабочее место) + идентификатор торгового объекта 

## Доступы к торговым объектам [/api/userObjects/{id_user}/{?type}/{?id_object}/{?without_children}]

### Получить дерево доступов к торговым объектам [GET]
Отображает дерево торговых объектов с доступами к ним (поле allowed). 
Если указан тип торговой точки и ее идентификатор, дерево строится от указанного объекта,
иначе - от виртуальной корневой группы торговых точек с идентификатором 0
+ Parameters
    + id_user (number,required) - Идентификатор пользователя. Будут отображены доступные торговые объекты только для этого пользователя
    + type (string, optional) - Тип торгового объекта: groupoutlet, outlet, workplace. 
    + id_object (number, optional) - Идентификатор торгового объекта
    + without_children (boolean, optional) - Если установлен в true, будут опущены данные о дочерних элементах 
+ Response 200 (application/json)
    + Attributes (array[UserObjectStructure])

### Разрешить доступ к торговому объекту [POST] 
Разрешает доступ к торговому объекту с указанными параметрами
Также устанавливает доступ ко всем дочерним объектам, и к родительским объектам, если все их дочерние объекты имеют доступ.
+ Parameters
    + id_user (number,required) - Идентификатор пользователя.
    + type (string, optional) - Тип торгового объекта: groupoutlet, outlet, workplace. 
    + id_object (number, optional) - Идентификатор торгового объекта
+ Response 204

### Запретить  доступ к торговому объекту [DELETE]
Запрещает доступ к торговому объекту с указанными параметрами
Также снимает доступ с дочерних объектов и с родительских объектов, если хотя бы один их дочерний объект доступа не имеет.
+ Parameters
    + id_user (number,required) - Идентификатор пользователя.
    + type (string, optional) - Тип торгового объекта: groupoutlet, outlet, workplace. 
    + id_object (number, optional) - Идентификатор торгового объекта
+ Response 204

## Восстанавливление доступов к торговым точкам и группам торговых точек [/api/roleActions/{id_user}/normalize_tree]
Если добавили или удалили торговый объект, то доступы к родительским объектам могут не соответствовать реальности
Данный вызов восстанавливает доступы к торговым точкам и группам торговых точек на основе доступов к рабочим местам
(Предполагается, что к родительскому объекту есть доступ, если есть доступ ко всем дочерним)
### Восстанавливление доступов к торговым точкам и группам торговых точек [GET]
+ Parameters
    + id_user (number,required) - Идентификатор пользователя.
+ Response 204

#Group Пользователи Скаута
Работа с пользователями Скаута. 
## Список пользователей Скаута [/api/users/{?active,with,order,filters,ids_list,offset,limit}]

### Получить список пользователей Скаута [GET]
+ Parameters
    + active (string, optional) - Если параметр равен "true", то возвращаются только записи со статусом 1 (0 - неактивный пользователь).
    + order (string, optional) - Список полей сортировки через запятую без пробелов
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: role  
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + offset (number, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (number, optional) - Возвращать указанное количество записей
+ Response 200 (application/json)
    + Attributes (array[UserStructure])

### Добавить пользователя Скаута [POST]
- Создавать пользователей может только администратор. При создании пользователя в данных нужно также указывать пароль.
(Изменение пароля происходит при помощи отдельного запроса)
- Поле `superuser` игнорируется (нельзя создать суперпользователя)
- Поле `lastvisit_at` игнорируется
+ Request (application/json)
    + Attributes (UserStructure)
+ Response 201 (application/json)
            + Headers
                Location: /api/users/1
    + Attributes (UserStructure)   

## Количество пользователей Скаута [/api/users/count/{?filters,ids_list,active}] 
### Получить количество пользователей Скаута  [GET]
+ Parameters
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + active (string, optional) - Если параметр равен "true", то учитываются только со статусом 1.
+ Response 200 (application/json)
    + Attributes (CountStructure)

## Пароль пользователя  [/api/users/password/{id_user}] 
### Изменить пароль пользователя Скаута  [PUT]
- Изменять пароль для любого пользователя без указания старого пароля может только админ. 
- Обычный пользователь может изменить только собственняй пароль. При этом ему нужно указать также старый пароль.
+ Parameters
    + id_user (number, required) - Идентификатор пользователя
+ Request (application/json)
    + Attributes (PasswordStructure) 
+ Response 204

## Текущий пользователь Скаута  [/api/users/current]
### Получить данные о текущем пользователе Скаута  [GET]
+ Response 200 (application/json)
    + Attributes (UserStructure)

## Пользователь Скаута  [/api/users/{id_user}]

### Получить пользователя Скаута по идентификатору  [GET]
+ Parameters
    + id_user (number, required) - Идентификатор пользователя
+ Response 200 (application/json)
    + Attributes (UserStructure)

### Изменить пользователя Скаута [PUT]
- Если текущий пользователь не админ, необходимо указавать текущий пароль пользователя, которому устанавливается новый пароль
- Атрибут `id_buyer` имеет смысл только для пользователя с ролью покупателя

+ Parameters
    + id_user (number, required) - Идентификатор пользователя
+ Request (application/json)
    + Attributes (UserStructure) 
+ Response 200 (application/json)
    + Attributes (UserStructure) 

### Удалить пользователя Скаута [DELETE]
**В данном случае происходит физическое удаление пользователя, а не деактивация!**
Если нужно деактивировать пользователя, установите значение поля `status` в 0.
+ Parameters
    + id_user (number, required) - Идентификатор пользователя
+ Response 204

# Group Приходная накладная

## Приходные накладные — шапки [/api/invoices{?with,order,filters,ids_list,offset,limit,from,to}]

### Список приходных накладных - шапки [GET]
+ Parameters
    + order (string, optional) - Список полей сортировки через запятую без пробелов
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: table, outlet, client, employee  
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + offset (number, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (number, optional) - Возвращать указанное количество записей
    + from (string,optional) - Возвращать документы, начиная с указанной даты
    + to (string,optional) - Возвращать документы до указанной даты
+ Response 200 (application/json)
    + Attributes (array[InvoiceHeadStructure])

### Создать приходную накладную [POST]
- Поле `status` в переданных данных игнорируется - оно будет установлено в -1 (в процессе редактирования)
+ Request (application/json)
    + Attributes (InvoiceHeadStructure)
+ Response 201 (application/json)
            + Headers
                Location: /api/invoices/1
    + Attributes (InvoiceHeadStructure)
    
## Количество приходных накладных [/api/invoices/count/{?filters,ids_list,from,to}] 
### Получить количество приходных накладных  [GET]
+ Parameters
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + from (string,optional) - Возвращать документы, начиная с указанной даты
    + to (string,optional) - Возвращать документы до указанной даты
+ Response 200 (application/json)
    + Attributes (CountStructure)    

## Приходная накладная [/api/invoices/{id_doc}/{?with}]
### Получить шапку приходной накладной [GET]
+ Parameters
    + id_doc (number, required) - Идентификатор документа
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: table, outlet, client, employee  
+ Response 200 (application/json)
    + Attributes (InvoiceHeadStructure)

### Изменить шапку приходной накладной [PUT]
- Изменять можно только неотправленный документ (status = -1)
- Поле `status` в переданных данных игнорируется
+ Parameters
    + id_doc (number, required) - Идентификатор документа
+ Request (application/json)
    + Attributes (InvoiceHeadStructure) 
+ Response 200 (application/json)
    + Attributes (InvoiceHeadStructure)     

## Создать приходную накладную из другого документа [/api/invoices/{from_doc_type}/{from_id_doc}]
### Создать приходную накладную из другого документа [POST]
+ Parameters
    + from_doc_type (string, required) - Тип документа (invoice, refund, movement, reprice, order)
    + from_id_doc (number,required) - Идентификатор документа
+ Request (application/json)
    + Attributes (InvoiceHeadStructure)
+ Response 201 (application/json)
            + Headers
                Location: /api/invoices/1
    + Attributes (InvoiceHeadStructure)

## Отправить приходную накладную [/api/invoices/{id_doc}/send]
### Отправить приходную накладную [POST]
- отправить можно только документ со статусом -1, не пустой, с ненулевой общей суммой
- статус документа устанавливается равным 0
- для каждого товара в документе закупочная цена (Price) устанавливается равной цене в документе.
+ Parameters
    + id_doc (number, required) - Идентификатор документа
+ Response 204

## Провести приходную накладную на сервере [/api/invoices/{id_doc}/post_on_server]
### Провести приходную накладную на сервере [POST]
- Провести можно только документ со статусом -1, не пустой, с ненулевой общей суммой
- статус документа устанавливается равным 4
- для каждого товара в документе закупочная цена (Price) устанавливается равной цене в документе.
+ Parameters
    + id_doc (number, required) - Идентификатор документа
+ Response 204

## Список строк приходной накладной [/api/invoicesTables/{?id_doc,with,order,filters,ids_list,offset,limit}]
### Список строк приходной накладной [GET]
+ Parameters
    + id_doc (number, optional) - Идентификатор документа
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: doc, goods, unit, series  
    + order (string, optional) - Список полей сортировки через запятую без пробелов
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + offset (number, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (number, optional) - Возвращать указанное количество записей
+ Response 200 (application/json)
    + Attributes (array[InvoiceTableStructure])

## Добавление строк в таблицу приходной накладной [/api/invoicesTables/{id_doc}/{?id_group,id_supplier}]
### Добавить строку или строки в таблицу приходной накладной [POST]
- Добавление одного товара. Добавляет строку в документ с идентификатором, указанным в параметре id_doc. Актуальные поля в JSON-е запроса:
    - id_goods - обязательное
    - id_unit - если не указано, устанавливается единица изменения по умолчанию
    - id_series - если не указано, устанавливается значение по умолчанию (-) 
    - quantity - обязательное
    - price - если не указано, устанавливается значение закупочной цены
- Массовое добавление товаров. Добавляются товары по группе товаров или поставщику. 
Должен быть указан один из следующих параметров:
    - id_group - идентификатор группы товаров
    - id_supplier - идентификатор поставщика

+ Parameters
    + id_doc (number, required) - Идентификатор документа
    + id_group (number, optional) - Идентификатор группы товаров
    + id_supplier (number,required) - Идентификатор поставщика
    
+ Request (application/json)
    + Attributes (InvoiceTableStructure)
+ Response 201 (application/json)
            + Headers
                Location: /api/invoicesTables/1/1
    + Attributes (InvoiceTableStructure)
    
+ Response 200 (application/json)
    + Attributes (array[MassiveDocAddLogStructure])     
    

## Строка таблицы приходной накладной [/api/invoicesTables/{id_line}/{?with} ]
### Получить строку таблицы приходной накладной [GET]
+ Parameters
    + id_line (number, required) - Идентификатор строки
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: doc, goods, unit, series
+ Response 200 (application/json)
    + Attributes (InvoiceTableStructure)

### Изменить строку таблицы приходной накладной [PUT]
- Поля `id_line`, `id_doc`, `date_doc`, `number_doc`, `consecutive` игнорируются
+ Parameters
    + id_line (number, required) - Идентификатор строки
+ Request (application/json)
    + Attributes (InvoiceTableStructure) 
+ Response 200 (application/json)
    + Attributes (InvoiceTableStructure) 

### Удалить строку таблицы приходной накладной [DELETE]
+ Parameters
    + id_line (number, required) - Идентификатор строки
+ Response 204

## Удалить все строки приходной накладной [/api/invoicesTables/all/{id_doc}]
### Удалить все строки приходной накладной [DELETE]
+ Parameters
    + id_doc (number, required) - Идентификатор документа
+ Response 204

# Group Возвратная накладная

## Возвратные накладные — шапки [/api/refunds{?with,order,filters,ids_list,offset,limit,from,to}]

### Список возвратных накладных - шапки [GET]
+ Parameters
    + order (string, optional) - Список полей сортировки через запятую без пробелов
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: table, outlet, client, employee  
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + offset (number, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (number, optional) - Возвращать указанное количество записей
    + from (string,optional) - Возвращать документы, начиная с указанной даты
    + to (string,optional) - Возвращать документы до указанной даты
+ Response 200 (application/json)
    + Attributes (array[RefundHeadStructure])

### Создать возвратную накладную [POST]
- Поле `status` в переданных данных игнорируется - оно будет установлено в -1 (в процессе редактирования)
+ Request (application/json)
    + Attributes (RefundHeadStructure)
+ Response 201 (application/json)
            + Headers
                Location: /api/refunds/1
    + Attributes (RefundHeadStructure)
    
## Количество возвратных накладных [/api/refunds/count/{?filters,ids_list,from,to}] 
### Получить количество возвратных накладных  [GET]
+ Parameters
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + from (string,optional) - Возвращать документы, начиная с указанной даты
    + to (string,optional) - Возвращать документы до указанной даты
+ Response 200 (application/json)
    + Attributes (CountStructure)

## Возвратная накладная [/api/refunds/{id_doc}/{?with}]
### Получить шапку возвратной накладной [GET]
+ Parameters
    + id_doc (number, required) - Идентификатор документа
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: table, outlet, client, employee  
+ Response 200 (application/json)
    + Attributes (RefundHeadStructure)

### Изменить шапку возвратной накладной [PUT]
- Изменять можно только неотправленный документ (status = -1)
- Поле `status` в переданных данных игнорируется
+ Parameters
    + id_doc (number, required) - Идентификатор документа
+ Request (application/json)
    + Attributes (RefundHeadStructure) 
+ Response 200 (application/json)
    + Attributes (RefundHeadStructure)

## Создать возвратную накладную из другого документа [/api/refunds/{from_doc_type}/{from_id_doc}]
### Создать возвратную накладную из другого документа [POST]
+ Parameters
    + from_doc_type (string, required) - Тип документа (invoice, refund, movement, reprice, order)
    + from_id_doc (number,required) - Идентификатор документа
+ Request (application/json)
    + Attributes (RefundHeadStructure)
+ Response 201 (application/json)
            + Headers
                Location: /api/refunds/1
    + Attributes (RefundHeadStructure)
    
## Отправить возвратную накладную [/api/refunds/{id_doc}/send]
### Отправить возвратную накладную [POST]
- отправить можно только документ со статусом -1, не пустой, с ненулевой общей суммой
- статус документа устанавливается равным 0
- для каждого товара в документе закупочная цена (Price) устанавливается равной цене в документе.
+ Parameters
    + id_doc (number, required) - Идентификатор документа
+ Response 204

## Провести возвратную накладную на сервере [/api/refunds/{id_doc}/post_on_server]
### Провести возвратную накладную на сервере [POST]
- Провести можно только документ со статусом -1, не пустой, с ненулевой общей суммой
- статус документа устанавливается равным 4
- для каждого товара в документе закупочная цена (Price) устанавливается равной цене в документе.
+ Parameters
    + id_doc (number, required) - Идентификатор документа
+ Response 204


## Список строк возвратной накладной [/api/refundsTables/{?id_doc,with,order,filters,ids_list,offset,limit}]
### Список строк возвратной накладной [GET]
+ Parameters
    + id_doc (number, optional) - Идентификатор документа
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: doc, goods, unit, series  
    + order (string, optional) - Список полей сортировки через запятую без пробелов
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + offset (number, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (number, optional) - Возвращать указанное количество записей
+ Response 200 (application/json)
    + Attributes (array[InvoiceTableStructure])

## Добавление строк в таблицу возвратной накладной [/api/refundsTables/{id_doc}/{?id_group,id_supplier}]
### Добавить строку или строки в таблицу возвратной накладной [POST]
- Добавление одного товара. Добавляет строку в документ с идентификатором, указанным в параметре id_doc. Актуальные поля в JSON-е запроса:
    - id_goods - обязательное
    - id_unit - если не указано, устанавливается единица изменения по умолчанию
    - id_series - если не указано, устанавливается значение по умолчанию (-) 
    - quantity - обязательное
    - price - если не указано, устанавливается значение закупочной цены
- Массовое добавление товаров. Добавляются товары по группе товаров или поставщику. 
Должен быть указан один из следующих параметров:
    - id_group - идентификатор группы товаров
    - id_supplier - идентификатор поставщика

+ Parameters
    + id_doc (number, required) - Идентификатор документа
    + id_group (number, optional) - Идентификатор группы товаров
    + id_supplier (number,required) - Идентификатор поставщика
    
+ Request (application/json)
    + Attributes (InvoiceTableStructure)
+ Response 201 (application/json)
            + Headers
                Location: /api/refundsTables/1/1
    + Attributes (RefundTableStructure)
    
+ Response 200 (application/json)
    + Attributes (array[MassiveDocAddLogStructure])     
    

## Строка таблицы возвратной накладной [/api/refundsTables/{id_line}/{?with} ]
### Получить строку таблицы возвратной накладной [GET]
+ Parameters
    + id_line (number, required) - Идентификатор строки
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: doc, goods, unit, series
+ Response 200 (application/json)
    + Attributes (RefundTableStructure)

### Изменить строку таблицы возвратной накладной [PUT]
- Поля `id_line`, `id_doc`, `date_doc`, `number_doc`, `consecutive` игнорируются
+ Parameters
    + id_line (number, required) - Идентификатор строки
+ Request (application/json)
    + Attributes (RefundTableStructure) 
+ Response 200 (application/json)
    + Attributes (RefundTableStructure) 

### Удалить строку таблицы возвратной накладной [DELETE]
+ Parameters
    + id_line (number, required) - Идентификатор строки
+ Response 204

## Удалить все строки возвратной накладной [/api/refundsTables/all/{id_doc}]
### Удалить все строки возвратной накладной [DELETE]
+ Parameters
    + id_doc (number, required) - Идентификатор документа
+ Response 204