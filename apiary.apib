FORMAT: 1A
HOST: private-01ace7-scout7.apiary-mock.com

# Scout

**API для приложения Scout**

- При  создании, изменении записей  ключевое поле (в JSON-е тела запроса) стандартно игнорируется. 
  При создании его значение будет присвоено автоматически.  
- Если необходимо явно указать значение ключевого поля, это можно сделать с дополнительным параметром запроса unprotect_keys=true   
- При изменении записей в JSON-е тела запроса можно указывать только те поля, которые должны быть изменены.
- При создании или изменени записей все атрибуты в JSON-е, которые не являются атрибутами модели, игнорируются. 
- Операция `DELETE` состоит в установке значения поля `active` в false.

## Data Structures

### GroupsGoodsTreeStructure
+ id_group: 4 (number, required)
+ name_group: Пополнение счета (string, required)
+ id_owner_group: 0 (number, required)
+ active: true (boolean, required)
+ id_image: 123 (number, required)
+ children: [] (array[GroupsGoodsTreeStructure], required)

### GroupsGoodsListStructure
+ id_group 4 (number, required)
+ name_group Пополнение счета (string, required)
+ id_owner_group 0 (number, required)
+ id_image 123 (number, required)
+ active true (boolean, required)

### GroupGoodsStructure
+ id_group: 4 (number, required)
+ id_owner_group: 0 (number, required)
+ name_group: Алкогольные напитки (string, required)
+ active: true (boolean, required)

### GoodsStructure
+ id_goods: 7 (number, required)
+ id_group: 1 (number, required)
+ id_tax: 1 (number, required)
+ name_goods: Чашка обычная (string, required)
+ sort_order: 7 (string)
+ id_printer: 1 (number)
+ type_goods: 0 (number)
+ active: true (boolean)
+ id_goods: 7 (number, required)
+ control_rest: false (boolean, required)
+ permission_type: 0 (number,required)
+ extern_service_id: 1 (number, required, nullable)
+ print_name_goods: Чашка обычная (string, required)
+ free_price: false (boolean, required)
+ only_bar_code: false (boolean, required)
+ control_showcase: false (boolean, required)
+ min_order: 0.000 (number, required)
+ id_client: 1 (number, required, nullable)
+ use_series: false (boolean, required)
+ id_text: 1 (number, required, nullable)
+ id_modificator_group: 1 (number, required, nullable)

### TypesGoodsStructure
+ type_goods: 1 (number, required)
+ name: Обычный товар (string, required)

### BarCodesStructure
+ bar_code: 4052557303215 (string,required)
+ id_unit: 1 (number,required)
+ id_goods: 910 (number,required)
+ id_series: `-` (string,required)
+ ext_bar_code: `-` (string,required)
+ active: true (boolean, required)

### ClientsStructure
+ id_client: 8 (number, required)
+ name_client: Иванов (string, required)
+ is_supplier: false (boolean, required)
+ is_buyer: true (boolean, required)
+ can_return: true (boolean, required)
+ id_price_level: 2 (number, required)
+ active: true (boolean, required)

### TaxesStructure
+ id_tax: 1 (number, required)
+ rate_tax: 0.00 (number, required)
+ name_tax: Без НДС (string, required)
+ id_group_tax: 1 (number, required)
+ active: true (boolean, required)

### GroupsTaxesStructure
+ id_group_tax: 1 (number, required)
+ name_group_tax: A (string, required)

### PricesStructure
+ id_goods: 1 (number, required)
+ id_unit: 1 (number, required)
+ id_series: `-` (string, required)
+ id_price_level: 1 (number, required)
+ price: 100.00 (number, required)
+ min_price: 0 (number, required) 
+ max_price: 0 (number, required)
+ active: true (boolean, required)

### PriceLevelsStructure
+ id_price_level: 1 (number, required)
+ name_price_level: Закупочная (string, required)
+ active: true (boolean, required)

### UnitsStructure
+ id_goods: 1 (number, required)
+ id_unit: 1 (number, required)
+ name_unit: шт (string, required)
+ is_default: false (boolean, required)
+ rate: 1.000 (number, required)
+ type_unit: 3 (number, required)
+ max_count: 0.000 (number, required)
+ active: true (boolean, required)

### TypesUnitsStructure
+ type_unit: 2 (number, required)
+ name: Кратное 25% (string, required)

### SeriesStructure
+ id_goods: 5 (number, required)
+ id_series: 1 (string, required)
+ name_series: Синие (string, required)
+ active: true  (boolean, required)

### ContainStructure
+ id_contain_goods: 1 (number, required)
+ id_unit: 1 (number, required)
+ id_series: `-` (string, required)
+ quantity: 10 (number, required)
+ active: true (boolean, required)

### DiscountCardsStructure
+ id_discount_card:  1 (number, required)
+ id_client:  1 (number, required)
+ bar_code: 4052557303215 (string,required)
+ phone_number: 5555555555 (string, required)
+ id_price_level: 1 (number)
+ id_dcard_type:  1 (number)
+ active: true (boolean, required)

### DiscountCardTypesStructure
+ id_dcard_type:  1 (number, required)
+ name: Card type one (string)
+ active: true (boolean, required)

### GoodsListsStructure
+ id_goods_list:  1 (number, required)
+ name: Goods list name (string, required)
+ active: true (boolean, required)

### GroupOutletsStructure
+ id_group_outlet: 2 (number, required)
+ name_group: Outlets group (string, required)
+ id_owner_group: 1 (number)
+ active: true (boolean, required)

### OutletsStructure
+ id_outlet: 2 (number, required)
+ name_outlet: This is outlet (string, required)
+ id_price_level: 1 (number, required)
+ id_employee: 1 (number, required)
+ id_teller_setting: 1 (number, required)
+ id_group_outlet: 1 (number, required)
+ active: true (boolean, required)

### WorkplacesStructure
+ id_workplace: 2 (number, required)
+ id_outlet: 1 (number, required)
+ name_workplace: This is workplace (string, required)
+ control_rest: false (boolean, required)
+ control_bar_code: false (boolean, required)
+ control_showcase: false (boolean, required)
+ allow_free_price: false (boolean, required)
+ control_goods: false (boolean, required)
+ ads_enabled: false (boolean, required)
+ active: true (boolean, required)

### OutletsListsStructure
+ id_outlet_list:  1 (number, required)
+ name: This is outlets list (string, required)
+ active: true (boolean, required)

### WorkplacesListsStructure
+ id_workplace_list:  1 (number, required)
+ name: This is workplaces list (string, required)
+ active: true (boolean, required)

### LoyaltyProgramsStructure
+ id_program:  1 (number, required)
+ program_text: Loyalty program JSON must be here. (string, required)
+ state:  1 (number, required)
+ active: true (boolean, required)

### AdsMessagesStructure
+ id_ads: 1  (number, required)
+ id_workplace: 1 (number, required)
+ ads_text: This is ads text example (string)
+ is_unique: false (boolean)
+ use_count: 0 (number)
+ active: true (boolean, required)

### CountStructure
+ count: 10 (number, required) 


#Group Группы товаров 

## Дерево групп товаров [/api/groupsGoods/tree{?active,order}]

### Получить все группы товаров в виде дерева [GET]

+ Parameters 

    + active (string, optional) - Если параметр присутствует и равен "true", то возвращается дерево, с использованием только активных групп товаров.
    + order (string, optional) - Список полей сортировки через запятую без пробелов. Для обратной сортировки поставить `-` перед именеи поля.

+ Response 200 (application/json)

    + Attributes (array[GroupsGoodsTreeStructure])

## Список групп товаров [/api/groupsGoods/list{?active,ids_list,filters,order,offset,limit}]

### Получить все группы товаров в виде списка [GET]

+ Parameters 

    + active (string, optional) - Если параметр присутствует и равен "true", то возвращается дерево, с использованием только активных групп товаров.
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + order (string, optional) - Список полей сортировки через запятую без пробелов. Для обратной сортировки поставить `-` перед именеи поля.
    + offset (integer, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (integer, optional) - Возвращать указанное количество записей

+ Response 200 (application/json)

    + Attributes (array[GroupsGoodsListStructure])


## Количество групп товаров [/api/groupsGoods/count{?filters,ids_list,active}]

### Получить количество групп товаров  [GET]
Возвращает количество записей    

+ Parameters

    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + active (string, optional) - Если параметр равен "true", то учитываются только активные записи.

+ Response 200 (application/json)

    + Attributes (CountStructure)  



## Добавление группы товаров [/api/groupsGoods/tree{?unprotect_keys}]

### Добавить группу товаров [POST]
- Атрибут `id_group` в JSON-е запроса  игнорируется, если не указан параметр `unprotect_keys=true`.

+ Parameters

    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)

    + Request (application/json)

    + Attributes (GroupGoodsStructure)    
            
+ Response 201 (application/json)

    + Headers

            Location: /api/groupsGoods/1

    + Attributes (GroupGoodsStructure)    

    
## Группа товаров [/api/groupsGoods/{id_group}{?unprotect_keys}]

### Получить группу товаров [GET]
Получение группы товаров.

+ Parameters

    + id_group (number) - Код группы товаров - целое число

+ Response 200 (application/json)

    + Attributes (GroupGoodsStructure)

### Изменить группу товаров [PUT]
Изменение группы товаров. 
- Атрибут `id_group` в JSON-е запроса  игнорируется, если не указан параметр `unprotect_keys=true`.

+ Parameters

    + id_group (number) - Код группы товаров - целое число
    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)

    + Attributes (GroupGoodsStructure)
            
+ Response 200 (application/json)

    + Attributes (GroupGoodsStructure)

### Деактивировать группу товаров [DELETE]
Деактивация группы товаров

+ Parameters

    + id_group (number) - Код группы товаров - целое число

+ Response 204


#Group Товары

## Список товаров [/api/goods{?id_group,immediate_parent,order,ids_list,filters,active,type_goods,offset,limit,unprotect_keys}]

### Получить список товаров [GET]
Получение списка товаров. Если не указывать код группы, возвращаются все товары, если immediate_parent не равен "true", будут возвращены также товары, которые входят в подчиненные группы, указаной группы товаров 

+ Parameters

    + id_group (integer, optional) - Код группы товаров, к которой принадлежит товар
    + immediate_parent (string, optional) - Если параметр равен "true", то возвращаются товары, принадлежащие непосредственно к данной группе
    + order (string, optional) - Список полей сортировки через запятую без пробелов. Для обратной сортировки поставить `-` перед именеи поля.
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + active (string, optional) - Если параметр равен "true", то возвращаются только активные товары.
    + offset (integer, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (integer, optional) - Возвращать указанное количество записей
    
+ Response 200 (application/json)

    + Attributes (array[GoodsStructure])
    

### Добавить товар [POST]
Добавление нового товара. 
- Атрибут id_goods в JSON-е запроса игнорируется (значение будет установлено автоматически), если не указан параметр `unprotect_keys=true`
- В таблицу front.series будет добавлена запись с серией по умолчанию для данного товара ("-")

+ Parameters

    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)

    + Attributes (GoodsStructure)
            
            
+ Response 201 (application/json)

    + Headers

            Location: /api/goods/1

    + Attributes (GoodsStructure)
    
## Количество товаров [/api/goods/count{?id_group,immediate_parent,ids_list,filters,active,type_goods}]

### Получить количество товаров [GET]
Возвращает количество записей 

+ Parameters

    + id_group (integer, optional) - Код группы товаров, к которой принадлежит товар
    + immediate_parent (string, optional) - Если параметр равен "true", то возвращаются товары, принадлежащие непосредственно к данной группе
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + active (string, optional) - Если параметр равен "true", то возвращаются только активные товары.

+ Response 200 (application/json)

    + Attributes (CountStructure)

## Товар [/api/goods/{id_goods}{?unprotect_keys}]

### Получить товар [GET]
Получение товара по коду

+ Parameters

    + id_goods (integer, required) - Код товара

+ Response 200 (application/json)

    + Attributes (GoodsStructure)

### Изменить товар [PUT]
Изменение товара. 
- Попытка изменить id_goods игнорируется

+ Parameters

    + id_goods (integer, required) - Код товара

+ Request (application/json)

    + Attributes (GoodsStructure)
            
+ Response 200 (application/json)

    + Attributes (GoodsStructure)

### Деактивировать товар [DELETE]
Деактивация товара

+ Parameters

    + id_goods (integer, required) - Код товара

+ Response 204   

## Типы товаров [/api/typesGoods]
Типы товаров нельзя редактировать. Только получить список.

### Получить список типов товаров [GET]

+ Response 200 (application/json)

    + Attributes (array[TypesGoodsStructure])


#Group Штрих-коды

## Список штрих-кодов [/api/barCodes{?bar_code,id_goods,filters,active,order,offset,limit}]

### Получить список штрих-кодов [GET]

+ Parameters

    + bar_code (integer, optional) - Штрих-код товара. Если указать, будет возвращен список для данного штрих-кода
    + id_goods (integer, optional) - Код товара. Если указать, будет возвращен список для данного товара
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + order (string, optional) - Список полей сортировки через запятую без пробелов. Для обратной сортировки поставить `-` перед именеи поля.
    + offset (integer, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (integer, optional) - Возвращать указанное количество записей
    
+ Response 200 (application/json)

    + Attributes (array[BarCodesStructure])   

### Добавить штрих-код [POST]
Ключевые атрибуты `bar_code`, `id_goods`, `id_unit`, `ext_bar_code`, `id_series` в JSON-е запроса стандартно игнорирутся. 
**Для добавления штрих-кода использовать параметр `unprotect_keys=true` и указывать значения ключевых полей в теле запроса**.

+ Request (application/json)

    + Attributes (BarCodesStructure)  
                

+ Response 201 (application/json)

    + Headers

            Location: /api/barCodes/1/1/1/1/1

    + Attributes (BarCodesStructure)  
    
## Количество штрих-кодов [/api/barCodes/count{?id_goods,bar_code,filters,active}]

### Получить количество штрих-кодов [GET]
Возвращает количество записей 

+ Parameters

    + id_goods (integer, optional) - Код товара
    + bar_code (string, optional) - Штрих-код
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + active (string, optional) - Если параметр равен "true", то возвращаются только активные товары.

+ Response 200 (application/json)

    + Attributes (CountStructure)    
    
            
## Штрих-код [/api/barCodes/{bar_code}/{id_goods}/{id_unit}/{?ext_bar_code}/{?id_series}]

### Получить данные о штрих-коде [GET]
- Параметры `ext_bar_code`, `id_series` можно опускать, если для обоих используются значения по умолчанию.
- Для указания значения по умолчанию для параметра `ext_bar_code` или `id_series` использовать слово `default`

+ Parameters
    + bar_code (integer, required) - Штрих-код товара
    + id_goods (integer, required) - Код товара
    + id_unit (integer, required) - Код единицы измерения
    + ext_bar_code (string, required) - Расширенный штрих-код
    + id_series (string, required) - Код серии

+ Response 200 (application/json)

    + Attributes (BarCodesStructure)
    
            
### Изменить данные о штрих-коде [PUT]
Ключевые атрибуты `bar_code`, `id_goods`, `id_unit`, `ext_bar_code`, `id_series` в JSON-е запроса стандартно игнорирутся. 
- Для изменения ключевых полей использовать параметр `unprotect_keys=true`

+ Parameters
    + bar_code (integer, required) - Штрих-код товара
    + id_goods (integer, required) - Код товара
    + id_unit (integer, required) - Код единицы измерения
    + ext_bar_code (string, required) - Расширенный штрих-код
    + id_series (string, required) - Код серии
+ Request (application/json)

    + Attributes (BarCodesStructure)
            
+ Response 200 (application/json)

    + Attributes (BarCodesStructure)
            
### Деактивировать данные о штрих-коде [DELETE]

+ Response 204     
    

#Group Контрагенты

## Список контрагентов [/api/clients{?is_supplier,is_buyer,ids_list,filters,active,order,offset,limit,unprotect_keys}]

### Получить список контрагентов [GET]
Получение списка контрагентов. Если не указаны дополнительные параметры, возвращаются сразу и поставщики, и покупатели.
Параметры supplier, buyer со значением true дают возможность получать отдельно списки поставщиков или покупателей

+ Parameters
    + is_supplier (string, optional) - Если параметр равен "true", то возвращается (добавляется запись) список покупателей 
    + is_buyer (string, optional) - Если параметр равен "true", то возвращается (добавляется запись) список ппоставщиков 
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + active (string, optional) - Если параметр равен "true", то возвращаются только активные контрагенты.
    + order (string, optional) - Список полей сортировки через запятую без пробелов    
    + offset (integer, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (integer, optional) - Возвращать указанное количество записей
    
+ Response 200 (application/json)

    + Attributes (array[ClientsStructure])  
    

### Добавить контрагента [POST]
Добавление контрагента. Атрибут id_client в JSON-е запроса стандартно игнорируется.

+ Parameters

    + unprotect_keys (string, optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)

    + Attributes (ClientsStructure)  
            
+ Response 201 (application/json)
    
    + Headers

            Location: /api/client/1

    + Attributes (ClientsStructure)  
            
## Количество контрагентов [/api/clients/count{?is_supplier,is_buyer,,ids_list,filters,active}]

### Получить количество контрагентов [GET]
Возвращает количество записей    

+ Parameters

    + is_supplier (string, optional) - Если параметр равен "true", то учитываются покупатели 
    + is_buyer (string, optional) - Если параметр равен "true", то учитываются поставщики 
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>    
    + active (string, optional) - Если параметр равен "true", то учитываются только активные контрагенты.

+ Response 200 (application/json)

    + Attributes (CountStructure)             
            
## Контрагент [/api/clients/{id_client}{?unprotect_keys}]

### Получить данные о контрагенте [GET]
Получение данных о клиенте по коду

+ Parameters

    + id_client (integer, required) - Код клиента

+ Response 200 (application/json)

    + Attributes (ClientsStructure)  
            
### Изменить данные о контрагенте [PUT]
Изменение данных о клиенте. Атрибут id_client в JSON-е запроса стандартно игнорируется.

+ Parameters

    + id_client (integer, required) - Код клиента
    + unprotect_keys (string, optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)

    + Attributes (ClientsStructure)  
            
+ Response 200 (application/json)

    + Attributes (ClientsStructure)  
            
### Деактивировать данные о контрагенте [DELETE]
Деактивация данных о контрагенте.

+ Parameters

    + id_client (integer, required) - Код клиента

+ Response 204     


#Group Налоги

## Список налогов [/api/taxes{?active,order,offset,limit,unprotect_keys}]

### Получить список налогов [GET]
Получение всех записей

+ Parameters

    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + order (string, optional) - Список полей сортировки через запятую без пробелов      
    + offset (integer, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (integer, optional) - Возвращать указанное количество записей
    
+ Response 200 (application/json)

    + Attributes (array[TaxesStructure]) 

### Добавить налог [POST]
Добавление нового налога. Атрибут id_tax в JSON-е запроса стандартно игнорируется.

+ Parameters

    + unprotect_keys (string, optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)

    + Attributes (TaxesStructure) 
            
+ Response 200 (application/json)

    + Headers

            Location: /api/taxes/1

    + Attributes (TaxesStructure) 

    
## Количество налогов [/api/taxes/count{?active}]

### Получить количество налогов [GET]
Возвращает количество записей    

+ Parameters

    + active (string, optional) - Если параметр равен "true", то учитываются только активные записи.

+ Response 200 (application/json)

    + Attributes (CountStructure)      
    
            
## Налог [/api/taxes/{id_tax}{?unprotect_keys}]

+ Parameters

    + id_tax (integer, required) - Код налога
    + unprotect_keys (string, optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

### Получить данные о налоге [GET]
Получение записи по коду

+ Response 200 (application/json)

    + Attributes (TaxesStructure) 
            
### Изменить данные о налоге [PUT]
Изменение данных о налоге. Атрибут id_tax в JSON-е запроса игнорируется.

+ Request (application/json)

    + Attributes (TaxesStructure) 
            
+ Response 200 (application/json)

    + Attributes (TaxesStructure) 
            
### Деактивировать данные о налоге [DELETE]

+ Response 204     


## Список групп налоговых ставок [/api/groupsTaxes{?active,order,offset,limit}]

### Получить список групп налоговых ставок [GET]
Получить список всех групп налоговых ставок

+ Parameters

    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + order (string, optional) - Список полей сортировки через запятую без пробелов    
    + offset (integer, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (integer, optional) - Возвращать указанное количество записей

+ Response 200 (application/json)

    + Attributes (array[GroupsTaxesStructure])   
    
### Добавить группу налоговых ставок [POST]
Добавление новой группы налоговых ставок.
- Атрибут `id_group_tax` в JSON-е запроса игнорируется (значение будет установлено автоматически), если не указан параметр `unprotect_keys=true`

+ Request (application/json)

    + Attributes (GroupsTaxesStructure) 
            
+ Response 200 (application/json)

    + Headers

            Location: /api/groupsTaxes/1

    + Attributes (GroupsTaxesStructure)   
    
    
## Количество групп налоговых ставок [/api/groupsTaxes/count{?active}]

### Получить количество налогов [GET]
Возвращает количество записей    

+ Parameters

    + active (string, optional) - Если параметр равен "true", то учитываются только активные записи.

+ Response 200 (application/json)

    + Attributes (CountStructure)      
        

## Группа налоговых ставок [/api/groupsTaxes/{id_group_tax}]

+ Parameters
    + id_group_tax (integer, required) - Код группы налоговых ставок

### Получить данные о группе налоговых ставок [GET]
Получение записи по коду

+ Response 200 (application/json)

    + Attributes (GroupsTaxesStructure)     

### Изменить данные о группе налоговых ставок [PUT]
Изменение группы налоговых ставок.
- Атрибут `id_group_tax` в JSON-е запроса игнорируется, если не указан параметр `unprotect_keys=true`

+ Request (application/json)

    + Attributes (GroupsTaxesStructure) 
            
+ Response 200 (application/json)

    + Attributes (GroupsTaxesStructure) 

### Деактивировать данные о группе налоговых ставок [DELETE]

+ Response 204  
            
#Group Цены

## Список цен [/api/prices{?id_goods,active,order,offset,limit}]

### Получить все цены [GET]

+ Parameters

    + id_goods (integer, optional) - Код товара. Если указать, будет возвращен список цен для конкретного товара
    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + order (string, optional) - Список полей сортировки через запятую без пробелов      
    + offset (integer, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (integer, optional) - Возвращать указанное количество записей
    
+ Response 200 (application/json)

    + Attributes (array[PricesStructure])   

### Добавить цену [POST]
Ключевые атрибуты `id_goods`, `id_unit`, `id_price_level`, `id_series` в JSON-е запроса стандартно игнорирутся. 
**Для добавления цены использовать параметр `unprotect_keys=true` и указывать значения ключевых полей в теле запроса**.

+ Request (application/json)

    + Attributes (PricesStructure)  
                

+ Response 201 (application/json)

    + Headers

            Location: /api/prices/1/1/1/1

    + Attributes (PricesStructure)  
    
    
## Количество цен [/api/prices/count{?id_goods,active}]

### Получить количество цен [GET]
Возвращает количество записей    

+ Parameters

    + id_goods (integer, optional) - Код товара. Если указать, будет учитываются цены для конкретного товара
    + active (string, optional) - Если параметр равен "true", то учитываются только активные записи.

+ Response 200 (application/json)

    + Attributes (CountStructure)      
        
    
## Цена [/api/price/{id_goods}/{id_unit}/{id_price_level}/{?id_series}]

### Получить данные о цене [GET]
Параметр `id_series`, опускается, если используется значение серии по умолчанию "-".

+ Parameters
    + id_goods (integer, required) - Код товара
    + id_unit (integer, required) - Код единицы измерения
    + id_price_level (integer, required) - Код уровня цен
    + id_series (string, optional) - Код серии. Если не указан, предполагается "-"   

+ Response 200 (application/json)

    + Attributes (PricesStructure)
    
            
### Изменить данные о цене [PUT]
Ключевые атрибуты `id_goods`, `id_unit`, `id_price_level`, `id_series` в JSON-е запроса стандартно игнорирутся. 

+ Parameters
    + id_goods (integer, required) - Код товара
    + id_unit (integer, required) - Код единицы измерения
    + id_price_level (integer, required) - Код уровня цен
    + id_series (string, optional) - Код серии. Если не указан, предполагается "-"   

+ Request (application/json)

    + Attributes (PricesStructure)
            
+ Response 200 (application/json)

    + Attributes (PricesStructure)
            
### Деактивировать данные о цене [DELETE]

+ Response 204     


#Group Уровни цен

## Список уровней цен [/api/priceLevels{?active,order,offset,limit}]

### Получить все уровни цен [GET]
Получение списка всех уровней цен

+ Parameters

    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + order (string, optional) - Список полей сортировки через запятую без пробелов        
    + offset (integer, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (integer, optional) - Возвращать указанное количество записей

+ Response 200 (application/json)

    + Attributes (array[PriceLevelsStructure])   
            
### Добавить уровень цен [POST]
Добавление уровня цен.  Атрибут `id_price_level` в JSON-е запроса стандартно игнорируется, если не указан параметр `unprotect_keys=true` (заполняется автоматически).

+ Request (application/json)

    + Attributes (PriceLevelsStructure)   
                
+ Response 201 (application/json)

    + Headers

            Location: /api/priceLevels/1

    + Attributes (PriceLevelsStructure)      
    
    
## Количество уровней цен [/api/priceLevels/count{?active}]

### Получить количество уровней цен [GET]
Возвращает количество записей    

+ Parameters

    + active (string, optional) - Если параметр равен "true", то учитываются только активные записи.

+ Response 200 (application/json)

    + Attributes (CountStructure)      
            

## Уровень цен [/api/priceLevels/{id_price_level}]

+ Parameters

    + id_price_level (integer, required) - Код уровня цен

### Получить данные об уровне цен [GET]
Получение данных об уровне цен

+ Response 200 (application/json)

    + Attributes (PriceLevelsStructure)   

### Изменить данные об уровне цен [PUT]
Атрибут `id_price_level` в JSON-е запроса стандартно игнорируется, если не указан параметр `unprotect_keys=true`

+ Request (application/json)

    + Attributes (PriceLevelsStructure)  
            
+ Response 200 (application/json)

    + Attributes (PriceLevelsStructure)  
            
### Деактивировать данные о цене [DELETE]

+ Response 204     


#Group Единицы измерения

## Список единиц измерения для товара [/api/units{?id_goods,active,order,offset,limit}]

### Получить все единицы измерения [GET]
Получение списка всех единиц измерения. Если указан параметр id_goods, возвращаются единицы измерения для конкретного товара

+ Parameters

    + id_goods (integer, optional) - Код товара, Если указан, возвращаются единицы измерения только для данного товара
    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + order (string, optional) - Список полей сортировки через запятую без пробелов     
    + offset (integer, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (integer, optional) - Возвращать указанное количество записей
    
+ Response 200 (application/json) 

    + Attributes (array[UnitsStructure])   
    
### Добавить единицу измерения [POST]
Добавление единицы измерения.  Атрибут `id_unit` в JSON-е запроса стандартно игнорируется и заполняется автоматически. 
Для указания вручную необходимо использовать параметр `unprotect_keys=true`.

+ Request (application/json)

    + Attributes (UnitsStructure)   
                

+ Response 201 (application/json)

    + Headers

            Location: /api/units/1/1

    + Attributes (UnitsStructure)          

    
## Количество единиц измерения [/api/units/count{?id_goods,active,order}]

### Получить количество единиц измерения  [GET]
Возвращает количество записей    

+ Parameters

    + id_goods (integer, optional) - Код товара, Если указан, учитываются единицы измерения только для данного товара
    + active (string, optional) - Если параметр равен "true", то учитываются только активные записи.
    + order (string, optional) - Список полей сортировки через запятую без пробелов        

+ Response 200 (application/json)

    + Attributes (CountStructure)      
            

## Единица измерения [/api/units/{id_goods}/{id_unit}]

+ Parameters
    + id_goods (integer, required) - Код товара
    + id_unit (integer, required) - Код единицы измерения

### Получить данные о единице измерения [GET]
Получение данных о единице измерения по коду товара и коду единицы измерения

+ Response 200 (application/json)

    + Attributes (UnitsStructure)
            
### Изменить данные о единице измерения [PUT]
Изменение данных о единице измерения. 
Атрибуты `id_goods`, `id_unit` в JSON-е запроса стандартно игнорирутся. 

+ Request (application/json)

    + Attributes (UnitsStructure)
            
+ Response 200 (application/json)

    + Attributes (UnitsStructure)
            
### Деактивировать данные о единице измерения [DELETE]

+ Response 204         


## Список типов единиц измерения [/api/typesUnits]

### Получить все типы единиц измерения [GET]
Получение списка типов единиц измерения товаров.

+ Response 200 (application/json)
    
    + Attributes (array[TypesUnitsStructure])
            

#Group Серии

## Список серий [/api/series{?id_goods,active,order,offset,limit,unprotect_keys}]

### Получить все серии [GET]
Получение списка всех серий. Если указан параметр id_goods, возвращаются серии для конкретного товара

+ Parameters

    + id_goods (integer, required) - Код товара, Если указан, возвращаются серии только для данного товара
    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + order (string, optional) - Список полей сортировки через запятую без пробелов      
    + offset (integer, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (integer, optional) - Возвращать указанное количество записей

+ Response 200 (application/json)

    + Attributes (array[SeriesStructure])   
    
### Добавить серию для товара [POST]
Добавление новой серии для товара.  
- Атрибуты `id_goods`, `id_series` в JSON-е запроса игнорируется, если не указан параметр `unprotect_keys=true`.
Значение `id_series` будет установлено автоматически. Значение `id_goods` передается соответствующим параметром. 
- Добавление записи серии по умолчанию ("-") происходит автоматически при создании нового товара.

+ Parameters

    + id_goods (integer, required) - Код товара 
    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)

    + Attributes (SeriesStructure)   
                
+ Response 201 (application/json)

    + Headers

            Location: /api/series/1/1

    + Attributes (SeriesStructure) 
   

    
## Количество серий [/api/series/count{?id_goods,active}]

### Получить количество серий  [GET]
Возвращает количество записей    

+ Parameters

    + id_goods (integer, optional) - Код товара, Если указан, учитываются серии только для данного товара
    + active (string, optional) - Если параметр равен "true", то учитываются только активные записи.

+ Response 200 (application/json)

    + Attributes (CountStructure)      
            
   
   
            
## Серия [/api/series/{id_goods}/{id_series}{?unprotect_keys}]

### Получить данные о серии товара [GET]
Получение данных о серии товара по коду товара и коду серии

+ Parameters
    + id_goods (integer, required) - Код товара
    + id_series (string, required) - Код серии

+ Response 200 (application/json)

    + Attributes (SeriesStructure) 
            
### Изменить данные о серии товара [PUT]
Изменение данных о серии товара по коду товара и коду серии

+ Parameters

    + id_goods (integer, required) - Код товара
    + id_series (string, required) - Код серии.
    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)

    + Attributes (SeriesStructure) 
            
+ Response 200 (application/json)

    + Attributes (SeriesStructure) 
            
### Деактивировать данные о серии товара [DELETE]

Деактивация данных о серии

+ Parameters

    + id_goods (integer, required) - Код товара
    + id_series (string, required) - Код серии

+ Response 204


#Group Составные товары

## Состав составных товаров [/api/contain/{?id_contain_goods,with,active,filters,order,offset,limit}]

### Получить список товаров составных товаров [GET]
Получение содержимого составных товаров.

+ Parameters

    + id_contain_goods (integer, optional) - Код составного товара 
    + with (string,optional) - Связанные данные. Возможные связи: containGoods, goods, unit, series, price_income. Названия связей указываются через запятую без пробелов.
    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + filters (string, optional) - Строка формата `field_name::filter|field_nameN::filterN`. Фильтрация записей. Производится текстовое сравнение. 
    + order (string, optional) - Список полей сортировки через запятую без пробелов      
    + offset (integer, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (integer, optional) - Возвращать указанное количество записей

+ Response 200 (application/json)

    + Attributes (array[ContainStructure])   

### Добавить товар в составной товар [POST]
Добавление нового товара в содержимое составного товара 

+ Parameters

     + id_contain_goods (integer,required) - Код составного товара 

+ Request (application/json)

    + Attributes (ContainStructure)   
                
+ Response 201 (application/json)

    + Headers

            Location: /api/contain/1/1/1/1

    + Attributes (SeriesStructure) 
   

## Количество записей товаров в составном товаре [/api/contain/count/{?id_contain_goods,active,filters}]

### Получить количество записей товаров  [GET]
Возвращает количество записей    

+ Parameters

    + id_contain_goods (integer, required) - Код составного товара 
    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + filters (string, optional) - Строка формата `field_name::filter|field_nameN::filterN`. Фильтрация записей. Производится текстовое сравнение.

+ Response 200 (application/json)

    + Attributes (CountStructure)      
            

## Товар в составном товаре [/api/contain/{id_contain_goods}/{id_goods}/{id_unit}/{id_series}{?unprotect_keys,with}]

### Получить данные о товаре в составном товаре [GET]
Получение данных о товаре в составном товаре

+ Parameters
    + id_contain_goods (integer, required) - Код составного товара 
    + with (string, optional) - Связанные данные. Возможные связи: containGoods, goods, unit, series, price_income. Названия связей указываются через запятую без пробелов.
    + id_goods (integer, required) - Код товара в составе
    + id_unit (integer, required) - Код единицы измерения
    + id_series (string, required) - Код серии

+ Response 200 (application/json)

    + Attributes (ContainStructure) 
    

### Изменить данные о товаре в составе составного товара [PUT]
Изменение данных товаре в составном товаре

+ Parameters
    + id_contain_goods (integer, required) - Код составного товара (часть ключа)
    + id_goods (integer, required) - Код товара в составе (часть ключа)
    + id_unit (integer, required) - Код единицы измерения (часть ключа)
    + id_series (string, required) - Код серии (часть ключа)
    + unprotect_keys (string,optional) - Если параметр существует и равен "true" значения ключевых полей не игнорируются
+ Request (application/json)

    + Attributes (SeriesStructure) 
            
+ Response 200 (application/json)

    + Attributes (SeriesStructure) 

### Деактивировать товар в составе составного товара [DELETE]
Деактивация записи о товаре в составе составного товара

+ Parameters

    + id_contain_goods (integer, required) - Код составного товара 
    + id_goods (integer, required) - Код товара в составе
    + id_unit (integer, required) - Код единицы измерения
    + id_series (string, required) - Код серии    

+ Response 204


#Group Дисконтные карты

## Список дисконтных карт [/api/discountCards{?active,order,with,filters,ids_list,offset,limit,unprotect_keys}]

### Получить список дисконтных карт [GET]
Получение списка всех дисконтных карт.

+ Parameters

    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + order (string, optional) - Список полей сортировки через запятую без пробелов      
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: priceLevel, discountCardType, client  
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + ids_list (string,optional) - Список идентификаторов дисконтных карт, которые нужно возвратить. Указывается через запятую без пробела 
    + offset (integer, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (integer, optional) - Возвращать указанное количество записей

+ Response 200 (application/json)

    + Attributes (array[DiscountCardsStructure])   

### Добавить дисконтную карту [POST]
Добавление дисконтной карты.  
- Атрибут `id_discount_card` в JSON-е запроса игнорируется, если не указан параметр `unprotect_keys=true`.

+ Parameters

    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)

    + Attributes (DiscountCardsStructure)   
                
+ Response 201 (application/json)

    + Headers

            Location: /api/discountCards/1/1

    + Attributes (DiscountCardsStructure) 
   

    
## Количество дисконтных карт [/api/discountCards/count{?filters,ids_list,active}]

### Получить количество дисконтных карт  [GET]
Возвращает количество записей    

+ Parameters

    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + active (string, optional) - Если параметр равен "true", то учитываются только активные записи.

+ Response 200 (application/json)

    + Attributes (CountStructure)      
            
     
## Дисконтная карта [/api/discountCards/{id_discount_card}/{?unprotect_keys,with}]

### Получить данные о дисконтной карте [GET]
Получение данных о дисконтной карте

+ Parameters
    + id_discount_card (integer, required) - Код дисконтной карты

+ Response 200 (application/json)

    + Attributes (DiscountCardsStructure) 

### Изменить данные о дисконтной карте [PUT]
Изменение данных о дисконтной карте по коду

+ Parameters

    + id_discount_card (integer, required) - Код дисконтной карты
    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: priceLevel, discountCardType, client  

+ Request (application/json)

    + Attributes (DiscountCardsStructure) 
            
+ Response 200 (application/json)

    + Attributes (DiscountCardsStructure) 
            
### Деактивировать данные о дисконтной карте [DELETE]

Деактивация данных о дисконтной карте

+ Parameters

    + id_discount_card (integer, required) - Код дисконтной карты

+ Response 204



#Group Типы дисконтных карт

## Список типов дисконтных карт [/api/discountCardTypes{?active,order,filters,ids_list,offset,limit,unprotect_keys}]

### Получить список типов дисконтных карт [GET]
Получение списка всех типов дисконтных карт.

+ Parameters

    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + order (string, optional) - Список полей сортировки через запятую без пробелов      
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + offset (integer, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (integer, optional) - Возвращать указанное количество записей

+ Response 200 (application/json)

    + Attributes (array[DiscountCardTypesStructure])   
    
### Добавить тип дисконтных карт [POST]
Добавление типа дисконтных карт.  
- Атрибут `id_dcard_type` в JSON-е запроса игнорируется, если не указан параметр `unprotect_keys=true`.

+ Parameters

    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)

    + Attributes (DiscountCardTypesStructure)   
                
+ Response 201 (application/json)

    + Headers

            Location: /api/discountCardTypes/1

    + Attributes (DiscountCardTypesStructure) 
   

    
## Количество типов дисконтных карт [/api/discountCardTypes/count{?filters,ids_list,active}]

### Получить количество типов дисконтных карт  [GET]
Возвращает количество записей    

+ Parameters

    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + active (string, optional) - Если параметр равен "true", то учитываются только активные записи.

+ Response 200 (application/json)

    + Attributes (CountStructure)      
            

## Тип дисконтной карты [/api/discountCardTypes/{id_dcard_type}/{?unprotect_keys}]

### Получить данные о типе дисконтной карты [GET]
Получение данных о типе дисконтной карты

+ Parameters
    + id_dcard_type (integer, required) - Код типа дисконтной карты

+ Response 200 (application/json)

    + Attributes (DiscountCardTypesStructure) 

### Изменить данные о типе дисконтной карты [PUT]
Изменение данных о типе дисконтной карты по коду

+ Parameters

    + id_dcard_type (integer, required) - Код типа дисконтной карты
    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)

    + Attributes (DiscountCardTypesStructure) 
            
+ Response 200 (application/json)

    + Attributes (DiscountCardTypesStructure) 

### Деактивировать данные о типе дисконтной карты [DELETE]
Деактивация данных о типе дисконтной карты

+ Parameters

    + id_dcard_type (integer, required) - Код типа дисконтной карты

+ Response 204


#Group Списки товаров

## Список списков товаров [/api/goodsLists{?active,order,filters,ids_list,offset,limit,unprotect_keys}]

### Получить список списков товаров [GET]
Получение списка списков товаров.

+ Parameters

    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + order (string, optional) - Список полей сортировки через запятую без пробелов      
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + offset (integer, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (integer, optional) - Возвращать указанное количество записей

+ Response 200 (application/json)

    + Attributes (array[DiscountCardTypesStructure])   

### Добавить список товаров [POST]
Добавление списка товаров.  
- Атрибут `id_goods_list` в JSON-е запроса игнорируется, если не указан параметр `unprotect_keys=true`.

+ Parameters

    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)

    + Attributes (GoodsListsStructure)   
                
+ Response 201 (application/json)

    + Headers

            Location: /api/goodsLists/1

    + Attributes (GoodsListsStructure) 
   

    
## Количество списков товаров [/api/goodsLists/count{?filters,ids_list,active}]

### Получить количество списков товаров  [GET]
Возвращает количество записей    

+ Parameters

    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + active (string, optional) - Если параметр равен "true", то учитываются только активные записи.

+ Response 200 (application/json)

    + Attributes (CountStructure)      
            

## Список товаров  [/api/goodsLists/{id_goods_list}/{?unprotect_keys}]

### Получить данные о списке товаров [GET]
Получение данных о типе дисконтной карты

+ Parameters
    + id_goods_list (integer, required) - Код типа дисконтной карты

+ Response 200 (application/json)

    + Attributes (GoodsListsStructure) 

### Изменить данные о списке товаров [PUT]
Изменение данных о списке товаров по коду

+ Parameters

    + id_goods_list (integer, required) - Код списка товаров
    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)

    + Attributes (GoodsListsStructure) 
            
+ Response 200 (application/json)

    + Attributes (GoodsListsStructure) 

### Деактивировать данные о списке товаров [DELETE]
Деактивация данных о списке товаров

+ Parameters

    + id_goods_list (integer, required) - Код списка товаров
+ Response 204


#Group Группы торговых точек

## Список групп торговых точек [/api/groupOutlets{?active,with,order,filters,ids_list,offset,limit,unprotect_keys}]

### Получить список групп торговых точек [GET]

+ Parameters

    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: owner, child, outlets  
    + order (string, optional) - Список полей сортировки через запятую без пробелов      
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + offset (integer, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (integer, optional) - Возвращать указанное количество записей

+ Response 200 (application/json)

    + Attributes (array[GroupOutletsStructure])   

### Добавить группу торговых точек [POST]
  
- Атрибут `id_group_outlet` в JSON-е запроса игнорируется, если не указан параметр `unprotect_keys=true`.

+ Parameters

    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)

    + Attributes (GroupOutletsStructure)   
                
+ Response 201 (application/json)

    + Headers

            Location: /api/groupOutlets/1

    + Attributes (GroupOutletsStructure) 
   

    
## Количество групп торговых точек [/api/groupOutlets/count{?filters,ids_list,active}]

### Получить количество групп торговых точек  [GET]

+ Parameters

    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + active (string, optional) - Если параметр равен "true", то учитываются только активные записи.

+ Response 200 (application/json)

    + Attributes (CountStructure)      
            

## Группа торговых точек  [/api/groupOutlets/{id_group_outlet}/{?unprotect_keys,with}]

### Получить данные о группе торговых точек [GET]

+ Parameters
    + id_group_outlet (integer, required) - Код группы торговых точек
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: owner, child, outlets  

+ Response 200 (application/json)

    + Attributes (GroupOutletsStructure) 

### Изменить данные о группе торговых точек [PUT]

+ Parameters

    + id_group_outlet (integer, required) - Код группы торговых точек
    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)

    + Attributes (GroupOutletsStructure) 
            
+ Response 200 (application/json)

    + Attributes (GroupOutletsStructure) 

### Деактивировать данные о группе торговых точек [DELETE]

+ Parameters

    + id_group_outlet (integer, required) - Код группы торговых точек
+ Response 204


#Group Торговые точки

## Список торговых точек [/api/outlets{?active,with,order,filters,ids_list,offset,limit,unprotect_keys}]

### Получить список торговых точек [GET]

+ Parameters

    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: priceLevel, workplace, groupOutlet  
    + order (string, optional) - Список полей сортировки через запятую без пробелов      
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + offset (integer, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (integer, optional) - Возвращать указанное количество записей

+ Response 200 (application/json)

    + Attributes (array[OutletsStructure])   

### Добавить торговую точку [POST]
  
- Атрибут `id_outlet` в JSON-е запроса игнорируется, если не указан параметр `unprotect_keys=true`.

+ Parameters

    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)

    + Attributes (OutletsStructure)   
                
+ Response 201 (application/json)

    + Headers

            Location: /api/outlets/1

    + Attributes (GroupOutletsStructure) 
   

    
## Количество торговых точек [/api/outlets/count{?filters,ids_list,active}]

### Получить количество торговых точек  [GET]

+ Parameters

    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + active (string, optional) - Если параметр равен "true", то учитываются только активные записи.

+ Response 200 (application/json)

    + Attributes (CountStructure)      
            

## Торговая точка  [/api/outlets/{id_outlet}/{?unprotect_keys,with}]

### Получить данные о торговой точке [GET]

+ Parameters
    + id_outlet (integer, required) - Код торговой точки
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: priceLevel, workplace, groupOutlet  

+ Response 200 (application/json)

    + Attributes (OutletsStructure) 

### Изменить данные о торговой точке [PUT]

+ Parameters

    + id_outlet (integer, required) - Код торговой точки
    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)

    + Attributes (OutletsStructure) 
            
+ Response 200 (application/json)

    + Attributes (OutletsStructure) 

### Деактивировать данные о торговой точке [DELETE]

+ Parameters

    + id_outlet (integer, required) - Код торговой точки
+ Response 204



#Group Рабочие места

## Список рабочих мест [/api/workplaces{?active,with,order,filters,ids_list,offset,limit,unprotect_keys}]

### Получить список рабочих мест [GET]

+ Parameters

    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: outlet  
    + order (string, optional) - Список полей сортировки через запятую без пробелов      
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + offset (integer, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (integer, optional) - Возвращать указанное количество записей

+ Response 200 (application/json)

    + Attributes (array[WorkplacesStructure])   

### Добавить рабочее место [POST]
  
- Атрибут `id_workplace` в JSON-е запроса игнорируется, если не указан параметр `unprotect_keys=true`.

+ Parameters

    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)

    + Attributes (WorkplacesStructure)   
                
+ Response 201 (application/json)

    + Headers

            Location: /api/workplaces/1

    + Attributes (WorkplacesStructure) 
   

## Количество  рабочих мест [/api/workplaces/count{?filters,ids_list,active}]

### Получить количество  рабочих мест  [GET]

+ Parameters

    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + active (string, optional) - Если параметр равен "true", то учитываются только активные записи.

+ Response 200 (application/json)

    + Attributes (CountStructure)      
            

## Рабочее место  [/api/workplaces/{id_outlet}/{?unprotect_keys,with}]

### Получить данные о рабочем месте [GET]

+ Parameters
    + id_outlet (integer, required) - Код рабочего места
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: outlet  

+ Response 200 (application/json)

    + Attributes (WorkplacesStructure) 

### Изменить данные о рабочем месте [PUT]

+ Parameters

    + id_outlet (integer, required) - Код рабочего места
    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)

    + Attributes (WorkplacesStructure) 
            
+ Response 200 (application/json)

    + Attributes (WorkplacesStructure) 

### Деактивировать данные о рабочем месте [DELETE]

+ Parameters

    + id_outlet (integer, required) - Код рабочего места
+ Response 204



#Group Программы лояльности

## Список програм лояльности [/api/loyaltyPrograms{?active,order,filters,ids_list,offset,limit,unprotect_keys}]

### Получить список програм лояльности [GET]

+ Parameters

    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + order (string, optional) - Список полей сортировки через запятую без пробелов      
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + offset (integer, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (integer, optional) - Возвращать указанное количество записей

+ Response 200 (application/json)

    + Attributes (array[LoyaltyProgramsStructure])   

### Добавить программу лояльности [POST]
  
- Атрибут `id_program` в JSON-е запроса игнорируется, если не указан параметр `unprotect_keys=true`.

+ Parameters

    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)

    + Attributes (LoyaltyProgramsStructure)   
                
+ Response 201 (application/json)

    + Headers

            Location: /api/loyaltyPrograms/1

    + Attributes (LoyaltyProgramsStructure) 
   

## Количество  программ лояльности [/api/loyaltyPrograms/count{?filters,ids_list,active}]

### Получить количество программ лояльности  [GET]

+ Parameters
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + active (string, optional) - Если параметр равен "true", то учитываются только активные записи.

+ Response 200 (application/json)
    + Attributes (CountStructure)      

## Текущая программа лояльности  [/api/loyaltyPrograms/current]

### Получить данные о текущей программе лояльности [GET]
Получение программы лояльности, в которой поле state = 1 (текущая программа)

+ Response 200 (application/json)
    + Attributes (LoyaltyProgramsStructure)     
            

## Программа лояльности  [/api/loyaltyPrograms/{id_program}/{?unprotect_keys,with}]

### Получить данные о программе лояльности [GET]

+ Parameters
    + id_program (integer, required) - Код программы лояльности

+ Response 200 (application/json)
    + Attributes (LoyaltyProgramsStructure) 

### Изменить данные о программе лояльности [PUT]

+ Parameters
    + id_program (integer, required) - Код программы лояльности
    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)
    + Attributes (LoyaltyProgramsStructure) 
            
+ Response 200 (application/json)
    + Attributes (LoyaltyProgramsStructure) 

### Деактивировать данные о программе лояльности [DELETE]

+ Parameters
    + id_program (integer, required) - Код программы лояльности
    
+ Response 204



#Group Рекламные сообщения для чеков

## Список рекламных сообщений для чеков [/api/AdsMessages{?active,order,filters,with,ids_list,offset,limit,unprotect_keys}]

### Получить список рекламных сообщений для чеков [GET]

+ Parameters

    + active (string, optional) - Если параметр равен "true", то возвращаются только активные записи.
    + order (string, optional) - Список полей сортировки через запятую без пробелов      
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + with (string, optional) - Список имен связанных ресурсов через запятую без пробелов. Связи: workplace  
    + offset (integer, optional) - Возвращать данные, начиная с указанного номера записи
    + limit (integer, optional) - Возвращать указанное количество записей

+ Response 200 (application/json)

    + Attributes (array[AdsMessagesStructure])   

### Добавить рекламное сообщение для чеков [POST]
  
- Атрибут `unprotect_keys=true` и значение `id_ads` в теле запроса указывать обязательно. Значение ключа `id_ads` автоматически не генерируется при создании записи.

+ Parameters

    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)

    + Attributes (AdsMessagesStructure)   
                
+ Response 201 (application/json)

    + Headers

            Location: /api/AdsMessages/1

    + Attributes (AdsMessagesStructure) 
   

## Количество рекламных сообщений для чеков [/api/AdsMessages/count{?filters,ids_list,active}]

### Получить количество рекламных сообщений для чеков  [GET]

+ Parameters
    + ids_list (string,optional) - Список значений ключевого поля записей, которые нужно возвратить. Указывается через запятую без пробела 
    + filters (string, optional) - Текстовые фильтры в формате: field_name::<search_term>|field_name1::<search_term1>
    + active (string, optional) - Если параметр равен "true", то учитываются только активные записи.

+ Response 200 (application/json)
    + Attributes (CountStructure)      
            

## Рекламное сообщение для чеков  [/api/AdsMessages/{id_ads}/{?unprotect_keys,with}]

### Получить данные о рекламном сообщении [GET]

+ Parameters
    + id_ads (integer, required) - Идентификатор рекламного сообщения
+ Response 200 (application/json)
    + Attributes (AdsMessagesStructure) 

### Изменить данные о рекламном сообщении [PUT]

+ Parameters
    + id_ads (integer, required) - Идентификатор рекламного сообщения
    + unprotect_keys (string,optional) - Если параметр существует и равен "true", в операциях создания/редактирования значения ключевого поля не игнорируются

+ Request (application/json)
    + Attributes (AdsMessagesStructure) 
            
+ Response 200 (application/json)
    + Attributes (AdsMessagesStructure) 

### Деактивировать данные о рекламном сообщении [DELETE]

+ Parameters
    + id_ads (integer, required) - Идентификатор рекламного сообщения
    
+ Response 204